/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables.records;


import gen.db.cora.tables.OrderTests;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderTestsRecord extends UpdatableRecordImpl<OrderTestsRecord> implements Record12<UUID, UUID, UUID, String, String, Integer, Boolean, Long, Timestamp, Timestamp, UUID, UUID> {

	private static final long serialVersionUID = -81985001;

	/**
	 * Setter for <code>cora.order_tests.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cora.order_tests.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>cora.order_tests.order_id</code>.
	 */
	public void setOrderId(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cora.order_tests.order_id</code>.
	 */
	public UUID getOrderId() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>cora.order_tests.test_id</code>.
	 */
	public void setTestId(UUID value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cora.order_tests.test_id</code>.
	 */
	public UUID getTestId() {
		return (UUID) getValue(2);
	}

	/**
	 * Setter for <code>cora.order_tests.indication_type</code>.
	 */
	public void setIndicationType(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cora.order_tests.indication_type</code>.
	 */
	public String getIndicationType() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cora.order_tests.order_test_status_type</code>.
	 */
	public void setOrderTestStatusType(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cora.order_tests.order_test_status_type</code>.
	 */
	public String getOrderTestStatusType() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cora.order_tests.quantity</code>.
	 */
	public void setQuantity(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cora.order_tests.quantity</code>.
	 */
	public Integer getQuantity() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>cora.order_tests.active</code>.
	 */
	public void setActive(Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cora.order_tests.active</code>.
	 */
	public Boolean getActive() {
		return (Boolean) getValue(6);
	}

	/**
	 * Setter for <code>cora.order_tests.version</code>.
	 */
	public void setVersion(Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cora.order_tests.version</code>.
	 */
	public Long getVersion() {
		return (Long) getValue(7);
	}

	/**
	 * Setter for <code>cora.order_tests.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cora.order_tests.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>cora.order_tests.modified</code>.
	 */
	public void setModified(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cora.order_tests.modified</code>.
	 */
	public Timestamp getModified() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>cora.order_tests.created_by</code>.
	 */
	public void setCreatedBy(UUID value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cora.order_tests.created_by</code>.
	 */
	public UUID getCreatedBy() {
		return (UUID) getValue(10);
	}

	/**
	 * Setter for <code>cora.order_tests.modified_by</code>.
	 */
	public void setModifiedBy(UUID value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cora.order_tests.modified_by</code>.
	 */
	public UUID getModifiedBy() {
		return (UUID) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<UUID, UUID, UUID, String, String, Integer, Boolean, Long, Timestamp, Timestamp, UUID, UUID> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<UUID, UUID, UUID, String, String, Integer, Boolean, Long, Timestamp, Timestamp, UUID, UUID> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return OrderTests.ORDER_TESTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return OrderTests.ORDER_TESTS.ORDER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field3() {
		return OrderTests.ORDER_TESTS.TEST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return OrderTests.ORDER_TESTS.INDICATION_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return OrderTests.ORDER_TESTS.ORDER_TEST_STATUS_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return OrderTests.ORDER_TESTS.QUANTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field7() {
		return OrderTests.ORDER_TESTS.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field8() {
		return OrderTests.ORDER_TESTS.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return OrderTests.ORDER_TESTS.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return OrderTests.ORDER_TESTS.MODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field11() {
		return OrderTests.ORDER_TESTS.CREATED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field12() {
		return OrderTests.ORDER_TESTS.MODIFIED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getOrderId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value3() {
		return getTestId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getIndicationType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getOrderTestStatusType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getQuantity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value7() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value8() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getModified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value11() {
		return getCreatedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value12() {
		return getModifiedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value2(UUID value) {
		setOrderId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value3(UUID value) {
		setTestId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value4(String value) {
		setIndicationType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value5(String value) {
		setOrderTestStatusType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value6(Integer value) {
		setQuantity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value7(Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value8(Long value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value9(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value10(Timestamp value) {
		setModified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value11(UUID value) {
		setCreatedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord value12(UUID value) {
		setModifiedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderTestsRecord values(UUID value1, UUID value2, UUID value3, String value4, String value5, Integer value6, Boolean value7, Long value8, Timestamp value9, Timestamp value10, UUID value11, UUID value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OrderTestsRecord
	 */
	public OrderTestsRecord() {
		super(OrderTests.ORDER_TESTS);
	}

	/**
	 * Create a detached, initialised OrderTestsRecord
	 */
	public OrderTestsRecord(UUID id, UUID orderId, UUID testId, String indicationType, String orderTestStatusType, Integer quantity, Boolean active, Long version, Timestamp created, Timestamp modified, UUID createdBy, UUID modifiedBy) {
		super(OrderTests.ORDER_TESTS);

		setValue(0, id);
		setValue(1, orderId);
		setValue(2, testId);
		setValue(3, indicationType);
		setValue(4, orderTestStatusType);
		setValue(5, quantity);
		setValue(6, active);
		setValue(7, version);
		setValue(8, created);
		setValue(9, modified);
		setValue(10, createdBy);
		setValue(11, modifiedBy);
	}
}
