/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables;


import gen.db.cora.Cora;
import gen.db.cora.Keys;
import gen.db.cora.tables.records.ReportsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reports extends TableImpl<ReportsRecord> {

	private static final long serialVersionUID = 1043068056;

	/**
	 * The reference instance of <code>cora.reports</code>
	 */
	public static final Reports REPORTS = new Reports();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReportsRecord> getRecordType() {
		return ReportsRecord.class;
	}

	/**
	 * The column <code>cora.reports.id</code>.
	 */
	public final TableField<ReportsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.reports.order_test_id</code>.
	 */
	public final TableField<ReportsRecord, UUID> ORDER_TEST_ID = createField("order_test_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.reports.report_type</code>.
	 */
	public final TableField<ReportsRecord, String> REPORT_TYPE = createField("report_type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>cora.reports.delivery_date</code>.
	 */
	public final TableField<ReportsRecord, Timestamp> DELIVERY_DATE = createField("delivery_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>cora.reports.qc_pass</code>.
	 */
	public final TableField<ReportsRecord, Boolean> QC_PASS = createField("qc_pass", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>cora.reports.indication</code>.
	 */
	public final TableField<ReportsRecord, String> INDICATION = createField("indication", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.reports.report_path</code>.
	 */
	public final TableField<ReportsRecord, String> REPORT_PATH = createField("report_path", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.reports.mrd_detected</code>.
	 */
	public final TableField<ReportsRecord, Boolean> MRD_DETECTED = createField("mrd_detected", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>cora.reports.residual_cells</code>.
	 */
	public final TableField<ReportsRecord, Integer> RESIDUAL_CELLS = createField("residual_cells", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cora.reports.interpretation</code>.
	 */
	public final TableField<ReportsRecord, String> INTERPRETATION = createField("interpretation", org.jooq.impl.SQLDataType.VARCHAR.length(8192), this, "");

	/**
	 * The column <code>cora.reports.summary_results</code>.
	 */
	public final TableField<ReportsRecord, String> SUMMARY_RESULTS = createField("summary_results", org.jooq.impl.SQLDataType.VARCHAR.length(8192), this, "");

	/**
	 * The column <code>cora.reports.clinical_consultant</code>.
	 */
	public final TableField<ReportsRecord, String> CLINICAL_CONSULTANT = createField("clinical_consultant", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.reports.clinical_consultant_signoff</code>.
	 */
	public final TableField<ReportsRecord, Timestamp> CLINICAL_CONSULTANT_SIGNOFF = createField("clinical_consultant_signoff", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>cora.reports.lab_director</code>.
	 */
	public final TableField<ReportsRecord, String> LAB_DIRECTOR = createField("lab_director", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.reports.lab_director_signoff</code>.
	 */
	public final TableField<ReportsRecord, Timestamp> LAB_DIRECTOR_SIGNOFF = createField("lab_director_signoff", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>cora.reports.active</code>.
	 */
	public final TableField<ReportsRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.reports.version</code>.
	 */
	public final TableField<ReportsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cora.reports.created</code>.
	 */
	public final TableField<ReportsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.reports.modified</code>.
	 */
	public final TableField<ReportsRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.reports.created_by</code>.
	 */
	public final TableField<ReportsRecord, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.reports.modified_by</code>.
	 */
	public final TableField<ReportsRecord, UUID> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * Create a <code>cora.reports</code> table reference
	 */
	public Reports() {
		this("reports", null);
	}

	/**
	 * Create an aliased <code>cora.reports</code> table reference
	 */
	public Reports(String alias) {
		this(alias, REPORTS);
	}

	private Reports(String alias, Table<ReportsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Reports(String alias, Table<ReportsRecord> aliased, Field<?>[] parameters) {
		super(alias, Cora.CORA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ReportsRecord> getPrimaryKey() {
		return Keys.REPORTS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ReportsRecord>> getKeys() {
		return Arrays.<UniqueKey<ReportsRecord>>asList(Keys.REPORTS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ReportsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ReportsRecord, ?>>asList(Keys.REPORTS__REPORTS_ORDER_TEST_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Reports as(String alias) {
		return new Reports(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Reports rename(String name) {
		return new Reports(name, null);
	}
}
