/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables.records;


import gen.db.cora.tables.ReportsOrderTestsXref;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportsOrderTestsXrefRecord extends UpdatableRecordImpl<ReportsOrderTestsXrefRecord> implements Record2<UUID, UUID> {

	private static final long serialVersionUID = 396785624;

	/**
	 * Setter for <code>cora.reports_order_tests_xref.report_id</code>.
	 */
	public void setReportId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cora.reports_order_tests_xref.report_id</code>.
	 */
	public UUID getReportId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>cora.reports_order_tests_xref.order_test_id</code>.
	 */
	public void setOrderTestId(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cora.reports_order_tests_xref.order_test_id</code>.
	 */
	public UUID getOrderTestId() {
		return (UUID) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<UUID, UUID> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<UUID, UUID> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<UUID, UUID> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return ReportsOrderTestsXref.REPORTS_ORDER_TESTS_XREF.REPORT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return ReportsOrderTestsXref.REPORTS_ORDER_TESTS_XREF.ORDER_TEST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getReportId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getOrderTestId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReportsOrderTestsXrefRecord value1(UUID value) {
		setReportId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReportsOrderTestsXrefRecord value2(UUID value) {
		setOrderTestId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReportsOrderTestsXrefRecord values(UUID value1, UUID value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ReportsOrderTestsXrefRecord
	 */
	public ReportsOrderTestsXrefRecord() {
		super(ReportsOrderTestsXref.REPORTS_ORDER_TESTS_XREF);
	}

	/**
	 * Create a detached, initialised ReportsOrderTestsXrefRecord
	 */
	public ReportsOrderTestsXrefRecord(UUID reportId, UUID orderTestId) {
		super(ReportsOrderTestsXref.REPORTS_ORDER_TESTS_XREF);

		setValue(0, reportId);
		setValue(1, orderTestId);
	}
}
