/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables.records;


import gen.db.cora.tables.Tests;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestsRecord extends UpdatableRecordImpl<TestsRecord> implements Record15<UUID, String, String, String, String, Boolean, String, String, String, Boolean, Long, Timestamp, Timestamp, UUID, UUID> {

	private static final long serialVersionUID = 1692850161;

	/**
	 * Setter for <code>cora.tests.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cora.tests.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>cora.tests.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cora.tests.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>cora.tests.family</code>.
	 */
	public void setFamily(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cora.tests.family</code>.
	 */
	public String getFamily() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cora.tests.measure</code>.
	 */
	public void setMeasure(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cora.tests.measure</code>.
	 */
	public String getMeasure() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cora.tests.assay_version</code>.
	 */
	public void setAssayVersion(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cora.tests.assay_version</code>.
	 */
	public String getAssayVersion() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cora.tests.saleable</code>.
	 */
	public void setSaleable(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cora.tests.saleable</code>.
	 */
	public Boolean getSaleable() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>cora.tests.product_code</code>.
	 */
	public void setProductCode(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cora.tests.product_code</code>.
	 */
	public String getProductCode() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>cora.tests.tax_code</code>.
	 */
	public void setTaxCode(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cora.tests.tax_code</code>.
	 */
	public String getTaxCode() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>cora.tests.description</code>.
	 */
	public void setDescription(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cora.tests.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>cora.tests.active</code>.
	 */
	public void setActive(Boolean value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cora.tests.active</code>.
	 */
	public Boolean getActive() {
		return (Boolean) getValue(9);
	}

	/**
	 * Setter for <code>cora.tests.version</code>.
	 */
	public void setVersion(Long value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cora.tests.version</code>.
	 */
	public Long getVersion() {
		return (Long) getValue(10);
	}

	/**
	 * Setter for <code>cora.tests.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cora.tests.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(11);
	}

	/**
	 * Setter for <code>cora.tests.modified</code>.
	 */
	public void setModified(Timestamp value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cora.tests.modified</code>.
	 */
	public Timestamp getModified() {
		return (Timestamp) getValue(12);
	}

	/**
	 * Setter for <code>cora.tests.created_by</code>.
	 */
	public void setCreatedBy(UUID value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cora.tests.created_by</code>.
	 */
	public UUID getCreatedBy() {
		return (UUID) getValue(13);
	}

	/**
	 * Setter for <code>cora.tests.modified_by</code>.
	 */
	public void setModifiedBy(UUID value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>cora.tests.modified_by</code>.
	 */
	public UUID getModifiedBy() {
		return (UUID) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<UUID, String, String, String, String, Boolean, String, String, String, Boolean, Long, Timestamp, Timestamp, UUID, UUID> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<UUID, String, String, String, String, Boolean, String, String, String, Boolean, Long, Timestamp, Timestamp, UUID, UUID> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return Tests.TESTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tests.TESTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Tests.TESTS.FAMILY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Tests.TESTS.MEASURE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Tests.TESTS.ASSAY_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Tests.TESTS.SALEABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Tests.TESTS.PRODUCT_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Tests.TESTS.TAX_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Tests.TESTS.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field10() {
		return Tests.TESTS.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field11() {
		return Tests.TESTS.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field12() {
		return Tests.TESTS.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field13() {
		return Tests.TESTS.MODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field14() {
		return Tests.TESTS.CREATED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field15() {
		return Tests.TESTS.MODIFIED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getFamily();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getMeasure();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getAssayVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getSaleable();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getProductCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getTaxCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value10() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value11() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value12() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value13() {
		return getModified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value14() {
		return getCreatedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value15() {
		return getModifiedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value3(String value) {
		setFamily(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value4(String value) {
		setMeasure(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value5(String value) {
		setAssayVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value6(Boolean value) {
		setSaleable(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value7(String value) {
		setProductCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value8(String value) {
		setTaxCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value9(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value10(Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value11(Long value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value12(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value13(Timestamp value) {
		setModified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value14(UUID value) {
		setCreatedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value15(UUID value) {
		setModifiedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord values(UUID value1, String value2, String value3, String value4, String value5, Boolean value6, String value7, String value8, String value9, Boolean value10, Long value11, Timestamp value12, Timestamp value13, UUID value14, UUID value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TestsRecord
	 */
	public TestsRecord() {
		super(Tests.TESTS);
	}

	/**
	 * Create a detached, initialised TestsRecord
	 */
	public TestsRecord(UUID id, String name, String family, String measure, String assayVersion, Boolean saleable, String productCode, String taxCode, String description, Boolean active, Long version, Timestamp created, Timestamp modified, UUID createdBy, UUID modifiedBy) {
		super(Tests.TESTS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, family);
		setValue(3, measure);
		setValue(4, assayVersion);
		setValue(5, saleable);
		setValue(6, productCode);
		setValue(7, taxCode);
		setValue(8, description);
		setValue(9, active);
		setValue(10, version);
		setValue(11, created);
		setValue(12, modified);
		setValue(13, createdBy);
		setValue(14, modifiedBy);
	}
}
