/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables;


import gen.db.cora.Cora;
import gen.db.cora.Keys;
import gen.db.cora.tables.records.SamplesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Samples extends TableImpl<SamplesRecord> {

	private static final long serialVersionUID = -311961142;

	/**
	 * The reference instance of <code>cora.samples</code>
	 */
	public static final Samples SAMPLES = new Samples();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SamplesRecord> getRecordType() {
		return SamplesRecord.class;
	}

	/**
	 * The column <code>cora.samples.id</code>.
	 */
	public final TableField<SamplesRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.samples.specimen_id</code>.
	 */
	public final TableField<SamplesRecord, UUID> SPECIMEN_ID = createField("specimen_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.samples.order_test_id</code>.
	 */
	public final TableField<SamplesRecord, UUID> ORDER_TEST_ID = createField("order_test_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.samples.calculated_sample_name</code>.
	 */
	public final TableField<SamplesRecord, String> CALCULATED_SAMPLE_NAME = createField("calculated_sample_name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.samples.disposal_date</code>.
	 */
	public final TableField<SamplesRecord, Timestamp> DISPOSAL_DATE = createField("disposal_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>cora.samples.failure_date</code>.
	 */
	public final TableField<SamplesRecord, Timestamp> FAILURE_DATE = createField("failure_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>cora.samples.failure_reason</code>.
	 */
	public final TableField<SamplesRecord, String> FAILURE_REASON = createField("failure_reason", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.samples.plate_id</code>.
	 */
	public final TableField<SamplesRecord, String> PLATE_ID = createField("plate_id", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>cora.samples.active</code>.
	 */
	public final TableField<SamplesRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.samples.version</code>.
	 */
	public final TableField<SamplesRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cora.samples.created</code>.
	 */
	public final TableField<SamplesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.samples.modified</code>.
	 */
	public final TableField<SamplesRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cora.samples.created_by</code>.
	 */
	public final TableField<SamplesRecord, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.samples.modified_by</code>.
	 */
	public final TableField<SamplesRecord, UUID> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * Create a <code>cora.samples</code> table reference
	 */
	public Samples() {
		this("samples", null);
	}

	/**
	 * Create an aliased <code>cora.samples</code> table reference
	 */
	public Samples(String alias) {
		this(alias, SAMPLES);
	}

	private Samples(String alias, Table<SamplesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Samples(String alias, Table<SamplesRecord> aliased, Field<?>[] parameters) {
		super(alias, Cora.CORA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SamplesRecord> getPrimaryKey() {
		return Keys.SAMPLES_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SamplesRecord>> getKeys() {
		return Arrays.<UniqueKey<SamplesRecord>>asList(Keys.SAMPLES_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SamplesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SamplesRecord, ?>>asList(Keys.SAMPLES__SAMPLES_SPECIMEN_ID_FKEY, Keys.SAMPLES__SAMPLES_ORDER_TEST_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Samples as(String alias) {
		return new Samples(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Samples rename(String name) {
		return new Samples(name, null);
	}
}
