/**
 * This class is generated by jOOQ
 */
package gen.db.cora.tables;


import gen.db.cora.Cora;
import gen.db.cora.Keys;
import gen.db.cora.tables.records.ReportsOrderTestsXrefRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportsOrderTestsXref extends TableImpl<ReportsOrderTestsXrefRecord> {

	private static final long serialVersionUID = 602861330;

	/**
	 * The reference instance of <code>cora.reports_order_tests_xref</code>
	 */
	public static final ReportsOrderTestsXref REPORTS_ORDER_TESTS_XREF = new ReportsOrderTestsXref();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReportsOrderTestsXrefRecord> getRecordType() {
		return ReportsOrderTestsXrefRecord.class;
	}

	/**
	 * The column <code>cora.reports_order_tests_xref.report_id</code>.
	 */
	public final TableField<ReportsOrderTestsXrefRecord, UUID> REPORT_ID = createField("report_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>cora.reports_order_tests_xref.order_test_id</code>.
	 */
	public final TableField<ReportsOrderTestsXrefRecord, UUID> ORDER_TEST_ID = createField("order_test_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * Create a <code>cora.reports_order_tests_xref</code> table reference
	 */
	public ReportsOrderTestsXref() {
		this("reports_order_tests_xref", null);
	}

	/**
	 * Create an aliased <code>cora.reports_order_tests_xref</code> table reference
	 */
	public ReportsOrderTestsXref(String alias) {
		this(alias, REPORTS_ORDER_TESTS_XREF);
	}

	private ReportsOrderTestsXref(String alias, Table<ReportsOrderTestsXrefRecord> aliased) {
		this(alias, aliased, null);
	}

	private ReportsOrderTestsXref(String alias, Table<ReportsOrderTestsXrefRecord> aliased, Field<?>[] parameters) {
		super(alias, Cora.CORA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ReportsOrderTestsXrefRecord> getPrimaryKey() {
		return Keys.REPORTS_ORDER_TESTS_XREF_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ReportsOrderTestsXrefRecord>> getKeys() {
		return Arrays.<UniqueKey<ReportsOrderTestsXrefRecord>>asList(Keys.REPORTS_ORDER_TESTS_XREF_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ReportsOrderTestsXrefRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ReportsOrderTestsXrefRecord, ?>>asList(Keys.REPORTS_ORDER_TESTS_XREF__REPORTS_ORDER_TESTS_XREF_REPORT_ID_FKEY, Keys.REPORTS_ORDER_TESTS_XREF__REPORTS_ORDER_TESTS_XREF_ORDER_TEST_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReportsOrderTestsXref as(String alias) {
		return new ReportsOrderTestsXref(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ReportsOrderTestsXref rename(String name) {
		return new ReportsOrderTestsXref(name, null);
	}
}
