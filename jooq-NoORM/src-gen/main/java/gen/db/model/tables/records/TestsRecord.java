/**
 * This class is generated by jOOQ
 */
package gen.db.model.tables.records;


import gen.db.model.tables.Tests;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestsRecord extends UpdatableRecordImpl<TestsRecord> implements Record12<UUID, String, String, String, String, String, Boolean, Long, Timestamp, Timestamp, String, String> {

	private static final long serialVersionUID = -509446982;

	/**
	 * Setter for <code>cora.tests.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cora.tests.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>cora.tests.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cora.tests.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>cora.tests.test_family</code>.
	 */
	public void setTestFamily(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cora.tests.test_family</code>.
	 */
	public String getTestFamily() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cora.tests.test_version</code>.
	 */
	public void setTestVersion(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cora.tests.test_version</code>.
	 */
	public String getTestVersion() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cora.tests.product_code</code>.
	 */
	public void setProductCode(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cora.tests.product_code</code>.
	 */
	public String getProductCode() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cora.tests.properties</code>.
	 */
	public void setProperties(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cora.tests.properties</code>.
	 */
	public String getProperties() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>cora.tests.active</code>.
	 */
	public void setActive(Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cora.tests.active</code>.
	 */
	public Boolean getActive() {
		return (Boolean) getValue(6);
	}

	/**
	 * Setter for <code>cora.tests.version</code>.
	 */
	public void setVersion(Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cora.tests.version</code>.
	 */
	public Long getVersion() {
		return (Long) getValue(7);
	}

	/**
	 * Setter for <code>cora.tests.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cora.tests.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>cora.tests.modified</code>.
	 */
	public void setModified(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cora.tests.modified</code>.
	 */
	public Timestamp getModified() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>cora.tests.created_by</code>.
	 */
	public void setCreatedBy(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cora.tests.created_by</code>.
	 */
	public String getCreatedBy() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>cora.tests.modified_by</code>.
	 */
	public void setModifiedBy(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cora.tests.modified_by</code>.
	 */
	public String getModifiedBy() {
		return (String) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<UUID, String, String, String, String, String, Boolean, Long, Timestamp, Timestamp, String, String> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<UUID, String, String, String, String, String, Boolean, Long, Timestamp, Timestamp, String, String> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return Tests.TESTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tests.TESTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Tests.TESTS.TEST_FAMILY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Tests.TESTS.TEST_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Tests.TESTS.PRODUCT_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Tests.TESTS.PROPERTIES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field7() {
		return Tests.TESTS.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field8() {
		return Tests.TESTS.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return Tests.TESTS.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return Tests.TESTS.MODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Tests.TESTS.CREATED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Tests.TESTS.MODIFIED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTestFamily();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTestVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getProductCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getProperties();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value7() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value8() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getModified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getCreatedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getModifiedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value3(String value) {
		setTestFamily(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value4(String value) {
		setTestVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value5(String value) {
		setProductCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value6(String value) {
		setProperties(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value7(Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value8(Long value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value9(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value10(Timestamp value) {
		setModified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value11(String value) {
		setCreatedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord value12(String value) {
		setModifiedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestsRecord values(UUID value1, String value2, String value3, String value4, String value5, String value6, Boolean value7, Long value8, Timestamp value9, Timestamp value10, String value11, String value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TestsRecord
	 */
	public TestsRecord() {
		super(Tests.TESTS);
	}

	/**
	 * Create a detached, initialised TestsRecord
	 */
	public TestsRecord(UUID id, String name, String testFamily, String testVersion, String productCode, String properties, Boolean active, Long version, Timestamp created, Timestamp modified, String createdBy, String modifiedBy) {
		super(Tests.TESTS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, testFamily);
		setValue(3, testVersion);
		setValue(4, productCode);
		setValue(5, properties);
		setValue(6, active);
		setValue(7, version);
		setValue(8, created);
		setValue(9, modified);
		setValue(10, createdBy);
		setValue(11, modifiedBy);
	}
}
