/*
 * Copyright (c) 2008, 2012 Oracle and/or its affiliates.
 * All rights reserved. Use is subject to license terms.
 *
 * This file is available and licensed under the following license:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  - Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the distribution.
 *  - Neither the name of Oracle Corporation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package sample.mediaplayer.ui;

import java.util.List;

import sample.mediaplayer.domain.Album;
import sample.mediaplayer.domain.Song;
import sample.mediaplayer.service.AlbumService;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.ListView;
import javafx.scene.layout.BorderPane;
import javafx.scene.media.Media;
import javafx.stage.Stage;

public class MediaPlayerOld extends Application {
    ListView<Song> songListView = new ListView<Song>(); //song list

    @Override public void start(Stage stage) throws Exception{
        stage.setTitle("Media Player");
        BorderPane rootPane = new BorderPane();
        Scene sceneWithPane = new Scene(rootPane); //new Scene(root,600,265);

        // Get album detais
        AlbumService albumService  = new AlbumService();
        Album album = albumService.getAlbum();
        List<Song> songTitles = album.getSongs();
        ObservableList<Song> songTitleList = FXCollections.observableList(songTitles);

        //Create Songs ListView
        rootPane.setCenter(songListView);
        songListView.setItems(songTitleList); // set ObservableList to ListView
        
        
        //Get Media
        String path = songTitles.get(0).toString(); //Default first song
        Media media  = new Media(path);
        
        //Create media player
         javafx.scene.media.MediaPlayer mediaPlayer = new javafx.scene.media.MediaPlayer(media);
        mediaPlayer.setAutoPlay(true);
        
        //Create and add media control
        MediaControl mediaControl = new MediaControl(mediaPlayer);
        rootPane.setBottom(mediaControl);
        
        sceneWithPane.getStylesheets().add(MediaPlayerOld.class.getResource("mediaplayer.css").toExternalForm());
        
        //add Listener to play newly selected song
        MyChangeListener songChangeListener = new MyChangeListener(rootPane,media, mediaPlayer,mediaControl);
        songListView.getSelectionModel().selectedItemProperty().addListener(songChangeListener);

        
        // show stage
        stage.setScene(sceneWithPane);
        stage.show();
    }

    public static void main(String[] args) {
        Application.launch(args);
    }
    
    class MyChangeListener implements ChangeListener<Song>{
    	BorderPane rootPane;
    	Media media;
    	javafx.scene.media.MediaPlayer mediaPlayer;
    	MediaControl mediaControl; 
    	
    	
    	MyChangeListener(BorderPane rootPane, Media media, javafx.scene.media.MediaPlayer mediaPlayer, MediaControl mediaControl){
    		this.rootPane  = rootPane;
    		this.media = media;
    		this.mediaPlayer  = mediaPlayer;
    		this.mediaControl = mediaControl;
    	}

		@Override
		public void changed(
				ObservableValue<? extends Song> paramObservableValue,
				Song oldUri, Song newUri) {
        	Media newMedia  = new Media(newUri.toString());
        	try {
				mediaPlayer.stop();
				mediaPlayer = new javafx.scene.media.MediaPlayer(newMedia);
				mediaControl = new MediaControl(mediaPlayer);
				mediaPlayer.play();
		        rootPane.setBottom(mediaControl);
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		}
    	
    }
}