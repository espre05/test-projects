//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.18 at 10:21:26 AM PDT 
//


package com.genologics.ri.container;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.genologics.ri.container package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Container_QNAME = new QName("http://genologics.com/ri/container", "container");
    private final static QName _Containers_QNAME = new QName("http://genologics.com/ri/container", "containers");
    private final static QName _Details_QNAME = new QName("http://genologics.com/ri/container", "details");
    private final static QName _ContainerPlacement_QNAME = new QName("", "placement");
    private final static QName _ContainerOccupiedWells_QNAME = new QName("", "occupied-wells");
    private final static QName _ContainerName_QNAME = new QName("", "name");
    private final static QName _ContainerState_QNAME = new QName("", "state");
    private final static QName _ContainerType_QNAME = new QName("", "type");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.genologics.ri.container
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Containers }
     * 
     */
    public Containers createContainers() {
        return new Containers();
    }

    /**
     * Create an instance of {@link Details }
     * 
     */
    public Details createDetails() {
        return new Details();
    }

    /**
     * Create an instance of {@link Container }
     * 
     */
    public Container createContainer() {
        return new Container();
    }

    /**
     * Create an instance of {@link Placement }
     * 
     */
    public Placement createPlacement() {
        return new Placement();
    }

    /**
     * Create an instance of {@link ContainerType }
     * 
     */
    public ContainerType createContainerType() {
        return new ContainerType();
    }

    /**
     * Create an instance of {@link ContainerLink }
     * 
     */
    public ContainerLink createContainerLink() {
        return new ContainerLink();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Container }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://genologics.com/ri/container", name = "container")
    public JAXBElement<Container> createContainer(Container value) {
        return new JAXBElement<Container>(_Container_QNAME, Container.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Containers }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://genologics.com/ri/container", name = "containers")
    public JAXBElement<Containers> createContainers(Containers value) {
        return new JAXBElement<Containers>(_Containers_QNAME, Containers.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Details }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://genologics.com/ri/container", name = "details")
    public JAXBElement<Details> createDetails(Details value) {
        return new JAXBElement<Details>(_Details_QNAME, Details.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Placement }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "placement", scope = Container.class)
    public JAXBElement<Placement> createContainerPlacement(Placement value) {
        return new JAXBElement<Placement>(_ContainerPlacement_QNAME, Placement.class, Container.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Long }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "occupied-wells", scope = Container.class)
    public JAXBElement<Long> createContainerOccupiedWells(Long value) {
        return new JAXBElement<Long>(_ContainerOccupiedWells_QNAME, Long.class, Container.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name", scope = Container.class)
    public JAXBElement<String> createContainerName(String value) {
        return new JAXBElement<String>(_ContainerName_QNAME, String.class, Container.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "state", scope = Container.class)
    public JAXBElement<String> createContainerState(String value) {
        return new JAXBElement<String>(_ContainerState_QNAME, String.class, Container.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContainerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "type", scope = Container.class)
    public JAXBElement<ContainerType> createContainerType(ContainerType value) {
        return new JAXBElement<ContainerType>(_ContainerType_QNAME, ContainerType.class, Container.class, value);
    }

}
