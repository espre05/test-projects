// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.domain;

import com.springsource.petclinic.domain.Vet;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect VetDataOnDemand_Roo_DataOnDemand {
    
    declare @type: VetDataOnDemand: @Component;
    
    private Random VetDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Vet> VetDataOnDemand.data;
    
    public Vet VetDataOnDemand.getNewTransientVet(int index) {
        com.springsource.petclinic.domain.Vet obj = new com.springsource.petclinic.domain.Vet();
        java.lang.String firstName = "firstName_" + index;
        if (firstName.length() > 30) {
            firstName  = firstName.substring(0, 30);
        }
        obj.setFirstName(firstName);
        java.lang.String lastName = "lastName_" + index;
        if (lastName.length() > 30) {
            lastName  = lastName.substring(0, 30);
        }
        obj.setLastName(lastName);
        java.lang.String address = "address_" + index;
        if (address.length() > 50) {
            address  = address.substring(0, 50);
        }
        obj.setAddress(address);
        java.lang.String city = "city_" + index;
        if (city.length() > 30) {
            city  = city.substring(0, 30);
        }
        obj.setCity(city);
        obj.setTelephone("telephone_" + index);
        java.lang.String homePage = "homePage_" + index;
        if (homePage.length() > 30) {
            homePage  = homePage.substring(0, 30);
        }
        obj.setHomePage(homePage);
        java.lang.String email = "email_" + index;
        if (email.length() > 30) {
            email  = email.substring(0, 30);
        }
        obj.setEmail(email);
        obj.setBirthDay(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setEmployedSince(new java.util.Date(new java.util.Date().getTime() - 10000000L));
        obj.setSpecialty(null);
        return obj;
    }
    
    public Vet VetDataOnDemand.getSpecificVet(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Vet obj = data.get(index);
        return Vet.findVet(obj.getId());
    }
    
    public Vet VetDataOnDemand.getRandomVet() {
        init();
        Vet obj = data.get(rnd.nextInt(data.size()));
        return Vet.findVet(obj.getId());
    }
    
    public boolean VetDataOnDemand.modifyVet(Vet obj) {
        return false;
    }
    
    public void VetDataOnDemand.init() {
        data = com.springsource.petclinic.domain.Vet.findVetEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Vet' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.springsource.petclinic.domain.Vet>();
        for (int i = 0; i < 10; i++) {
            com.springsource.petclinic.domain.Vet obj = getNewTransientVet(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
