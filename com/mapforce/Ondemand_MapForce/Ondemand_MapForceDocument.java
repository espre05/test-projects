/**
 * Ondemand_MapForceDocument.java
 *
 * This file was generated by MapForce 2011.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */

package com.mapforce.Ondemand_MapForce;

import java.io.IOException;

import com.altova.AltovaException;
import com.altova.text.TextNode;
import com.altova.text.flex.*;
import com.altova.text.TextNodeXMLSerializer;


public class Ondemand_MapForceDocument extends TextDocument {

	// Project Root2
	static private CommandProject command_Root2 = new CommandProject("Root", 0);

	// SplitSingle SplitOnce__HeaderAndConent2
	static private SplitLines splitter_SplitOnce__HeaderAndConent2 = new SplitLines(5);
	static private CommandSplitSingle command_SplitOnce__HeaderAndConent2 = new CommandSplitSingle("SplitOnce: HeaderAndConent", splitter_SplitOnce__HeaderAndConent2, 0, 5);

	// SplitMultiple RepeatSplit_HeaderRows2
	static private SplitLines splitter_RepeatSplit_HeaderRows2 = new SplitLines(1);
	static private CommandSplitMultiple command_RepeatSplit_HeaderRows2 = new CommandSplitMultiple("RepeatSplit HeaderRows", splitter_RepeatSplit_HeaderRows2, 0, 1);

	// Switch SwitchEachContentLine2
		static private Condition[] conditions_SwitchEachContentLine2 = {
			new Condition("", Condition.ContentStartWith, "ONDEMAND"),
			new Condition("", Condition.ContentStartWith, " DATE"),
			new Condition("", Condition.ContentStartWith, " PGM"),
			new Condition("", Condition.ContentStartWith, " GENERATOR"),
			new Condition("", Condition.ContentStartWith, " ARCHIVE"),
		};
	static private CommandSwitch command_SwitchEachContentLine2 = new CommandSwitch("SwitchEachContentLine", conditions_SwitchEachContentLine2, 0);

	// FLF L1__ONDEMANDJob2
	static private CommandStore store_L1__ONDEMANDJob2_Field12 = new CommandStore("Field", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_jobName2 = new CommandStore("jobName", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_Field25 = new CommandStore("Field2", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_reportId2 = new CommandStore("reportId", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_Field35 = new CommandStore("Field3", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_expireDate2 = new CommandStore("expireDate", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_Field43 = new CommandStore("Field4", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_systemDate2 = new CommandStore("systemDate", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_Field52 = new CommandStore("Field5", 2, " ");
	static private CommandStore store_L1__ONDEMANDJob2_description2 = new CommandStore("description", 2, " ");
	static private ColumnFixed[] columns_L1__ONDEMANDJob2 = {
		new ColumnFixed(store_L1__ONDEMANDJob2_Field12, 14, ' ', 2, "Field"),
		new ColumnFixed(store_L1__ONDEMANDJob2_jobName2, 9, ' ', 2, "jobName"),
		new ColumnFixed(store_L1__ONDEMANDJob2_Field25, 11, ' ', 2, "Field2"),
		new ColumnFixed(store_L1__ONDEMANDJob2_reportId2, 9, ' ', 2, "reportId"),
		new ColumnFixed(store_L1__ONDEMANDJob2_Field35, 13, ' ', 2, "Field3"),
		new ColumnFixed(store_L1__ONDEMANDJob2_expireDate2, 12, ' ', 2, "expireDate"),
		new ColumnFixed(store_L1__ONDEMANDJob2_Field43, 13, ' ', 2, "Field4"),
		new ColumnFixed(store_L1__ONDEMANDJob2_systemDate2, 11, ' ', 2, "systemDate"),
		new ColumnFixed(store_L1__ONDEMANDJob2_Field52, 7, ' ', 2, "Field5"),
		new ColumnFixed(store_L1__ONDEMANDJob2_description2, 6, ' ', 2, "description"),
	};
	static private SplitLines splitter_L1__ONDEMANDJob2 = new SplitLines(1, true);
	static private CommandFLF command_L1__ONDEMANDJob2 = new CommandFLF("L1: ONDEMANDJob", columns_L1__ONDEMANDJob2, false, splitter_L1__ONDEMANDJob2, true);

	// FLF L2__Date_line2
	static private CommandStore store_L2__Date_line2_Field13 = new CommandStore("Field", 2, " ");
	static private CommandStore store_L2__Date_line2_manifestSubmisstionDate2 = new CommandStore("manifestSubmisstionDate", 2, " ");
	static private CommandStore store_L2__Date_line2_Field26 = new CommandStore("Field2", 2, " ");
	static private CommandStore store_L2__Date_line2_manifestSubmissionTime2 = new CommandStore("manifestSubmissionTime", 2, " ");
	static private CommandStore store_L2__Date_line2_manifestTitle2 = new CommandStore("manifestTitle", 2, " ");
	static private CommandStore store_L2__Date_line2_Field36 = new CommandStore("Field3", 2, " ");
	static private CommandStore store_L2__Date_line2_pageNumber2 = new CommandStore("pageNumber", 2, " ");
	static private ColumnFixed[] columns_L2__Date_line2 = {
		new ColumnFixed(store_L2__Date_line2_Field13, 6, ' ', 2, "Field"),
		new ColumnFixed(store_L2__Date_line2_manifestSubmisstionDate2, 12, ' ', 2, "manifestSubmisstionDate"),
		new ColumnFixed(store_L2__Date_line2_Field26, 5, ' ', 2, "Field2"),
		new ColumnFixed(store_L2__Date_line2_manifestSubmissionTime2, 9, ' ', 2, "manifestSubmissionTime"),
		new ColumnFixed(store_L2__Date_line2_manifestTitle2, 54, ' ', 2, "manifestTitle"),
		new ColumnFixed(store_L2__Date_line2_Field36, 5, ' ', 2, "Field3"),
		new ColumnFixed(store_L2__Date_line2_pageNumber2, 4, ' ', 2, "pageNumber"),
	};
	static private SplitLines splitter_L2__Date_line2 = new SplitLines(1, true);
	static private CommandFLF command_L2__Date_line2 = new CommandFLF("L2: Date line", columns_L2__Date_line2, false, splitter_L2__Date_line2, true);

	// FLF L3___Pgm_Line2
	static private CommandStore store_L3___Pgm_Line2_Field14 = new CommandStore("Field", 2, " ");
	static private CommandStore store_L3___Pgm_Line2_program2 = new CommandStore("program", 2, " ");
	static private ColumnFixed[] columns_L3___Pgm_Line2 = {
		new ColumnFixed(store_L3___Pgm_Line2_Field14, 5, ' ', 2, "Field"),
		new ColumnFixed(store_L3___Pgm_Line2_program2, 35, ' ', 2, "program"),
	};
	static private SplitLines splitter_L3___Pgm_Line2 = new SplitLines(1, true);
	static private CommandFLF command_L3___Pgm_Line2 = new CommandFLF("L3 : Pgm Line", columns_L3___Pgm_Line2, false, splitter_L3___Pgm_Line2, true);

	// FLF L4__Generator_Line2
	static private CommandStore store_L4__Generator_Line2_Field15 = new CommandStore("Field", 2, " ");
	static private CommandStore store_L4__Generator_Line2_generator2 = new CommandStore("generator", 2, " ");
	static private ColumnFixed[] columns_L4__Generator_Line2 = {
		new ColumnFixed(store_L4__Generator_Line2_Field15, 11, ' ', 2, "Field"),
		new ColumnFixed(store_L4__Generator_Line2_generator2, 20, ' ', 2, "generator"),
	};
	static private SplitLines splitter_L4__Generator_Line2 = new SplitLines(1, true);
	static private CommandFLF command_L4__Generator_Line2 = new CommandFLF("L4: Generator Line", columns_L4__Generator_Line2, false, splitter_L4__Generator_Line2, true);

	// FLF L5__Archive_File_Name_2
	static private CommandStore store_L5__Archive_File_Name_2_Field16 = new CommandStore("Field", 2, " ");
	static private CommandStore store_L5__Archive_File_Name_2_archiveFileName2 = new CommandStore("archiveFileName", 2, " ");
	static private ColumnFixed[] columns_L5__Archive_File_Name_2 = {
		new ColumnFixed(store_L5__Archive_File_Name_2_Field16, 9, ' ', 2, "Field"),
		new ColumnFixed(store_L5__Archive_File_Name_2_archiveFileName2, 43, ' ', 2, "archiveFileName"),
	};
	static private SplitLines splitter_L5__Archive_File_Name_2 = new SplitLines(1, true);
	static private CommandFLF command_L5__Archive_File_Name_2 = new CommandFLF("L5: Archive File Name ", columns_L5__Archive_File_Name_2, false, splitter_L5__Archive_File_Name_2, true);

	// SplitMultiple Repeated_split__Content_blocks2
	static private SplitLines splitter_Repeated_split__Content_blocks2 = new SplitLines(2);
	static private CommandSplitMultiple command_Repeated_split__Content_blocks2 = new CommandSplitMultiple("Repeated split: Content blocks", splitter_Repeated_split__Content_blocks2, 0, 2);

	// Switch Switch4
		static private Condition[] conditions_Switch4 = {
			new Condition("", Condition.ContentStartWith, "ASSET"),
			new Condition("", Condition.ContentStartWith, ""),
		};
	static private CommandSwitch command_Switch4 = new CommandSwitch("Switch", conditions_Switch4, 0);

	// SplitMultiple Repeated_split__Block_starting_with_ASSET_2
	static private SplitLines splitter_Repeated_split__Block_starting_with_ASSET_2 = new SplitLines(1);
	static private CommandSplitMultiple command_Repeated_split__Block_starting_with_ASSET_2 = new CommandSplitMultiple("Repeated split: Block starting with ASSET ", splitter_Repeated_split__Block_starting_with_ASSET_2, 0, 1);

	// Switch Switch5
		static private Condition[] conditions_Switch5 = {
			new Condition("", Condition.ContentStartWith, "ASSET"),
			new Condition("", Condition.ContentStartWith, "      "),
		};
	static private CommandSwitch command_Switch5 = new CommandSwitch("Switch", conditions_Switch5, 0);

	// FLF FLF3
	static private CommandStore store_FLF3_Field27 = new CommandStore("Field2", 2, " ");
	static private CommandStore store_FLF3_assetId2 = new CommandStore("assetId", 2, " ");
	static private CommandStore store_FLF3_Field_ignore2 = new CommandStore("Field-ignore", 2, " ");
	static private CommandStore store_FLF3_compName2 = new CommandStore("compName", 2, " ");
	static private CommandStore store_FLF3_Field17 = new CommandStore("Field", 2, " ");
	static private CommandStore store_FLF3_Field37 = new CommandStore("Field3", 2, " ");
	static private CommandStore store_FLF3_attnContact12 = new CommandStore("attnContact1", 2, " ");
	static private ColumnFixed[] columns_FLF3 = {
		new ColumnFixed(store_FLF3_Field27, 7, ' ', 2, "Field2"),
		new ColumnFixed(store_FLF3_assetId2, 9, ' ', 2, "assetId"),
		new ColumnFixed(store_FLF3_Field_ignore2, 3, ' ', 2, "Field-ignore"),
		new ColumnFixed(store_FLF3_compName2, 60, ' ', 2, "compName"),
		new ColumnFixed(store_FLF3_Field17, 3, ' ', 2, "Field"),
		new ColumnFixed(store_FLF3_Field37, 6, ' ', 2, "Field3"),
		new ColumnFixed(store_FLF3_attnContact12, 6, ' ', 2, "attnContact1"),
	};
	static private SplitLines splitter_FLF3 = new SplitLines(1, true);
	static private CommandFLF command_FLF3 = new CommandFLF("FLF", columns_FLF3, false, splitter_FLF3, true);

	// FLF FLF22
	static private CommandStore store_FLF22_attnContact22 = new CommandStore("attnContact2", 2, " ");
	static private CommandStore store_FLF22_transactionId2 = new CommandStore("transactionId", 2, " ");
	static private CommandStore store_FLF22_Field18 = new CommandStore("Field", 2, " ");
	static private CommandStore store_FLF22_date2 = new CommandStore("date", 2, " ");
	static private CommandStore store_FLF22_Field28 = new CommandStore("Field2", 2, " ");
	static private CommandStore store_FLF22_runTime2 = new CommandStore("runTime", 2, " ");
	static private CommandStore store_FLF22_Field38 = new CommandStore("Field3", 2, " ");
	static private CommandStore store_FLF22_reportTitle2 = new CommandStore("reportTitle", 2, " ");
	static private CommandStore store_FLF22_Field44 = new CommandStore("Field4", 2, " ");
	static private CommandStore store_FLF22_contentPath2 = new CommandStore("contentPath", 2, " ");
	static private ColumnFixed[] columns_FLF22 = {
		new ColumnFixed(store_FLF22_attnContact22, 10, ' ', 2, "attnContact2"),
		new ColumnFixed(store_FLF22_transactionId2, 9, ' ', 2, "transactionId"),
		new ColumnFixed(store_FLF22_Field18, 2, ' ', 2, "Field"),
		new ColumnFixed(store_FLF22_date2, 11, ' ', 2, "date"),
		new ColumnFixed(store_FLF22_Field28, 1, ' ', 2, "Field2"),
		new ColumnFixed(store_FLF22_runTime2, 3, ' ', 2, "runTime"),
		new ColumnFixed(store_FLF22_Field38, 8, ' ', 2, "Field3"),
		new ColumnFixed(store_FLF22_reportTitle2, 50, ' ', 2, "reportTitle"),
		new ColumnFixed(store_FLF22_Field44, 51, ' ', 2, "Field4"),
		new ColumnFixed(store_FLF22_contentPath2, 30, ' ', 2, "contentPath"),
	};
	static private SplitLines splitter_FLF22 = new SplitLines(1, true);
	static private CommandFLF command_FLF22 = new CommandFLF("FLF2", columns_FLF22, false, splitter_FLF22, true);

	// Block Node_Ignore_block_starting_with_CR_LF2
	static private CommandBlock command_Node_Ignore_block_starting_with_CR_LF2 = new CommandBlock("Node Ignore block starting with CR/LF");

	public Ondemand_MapForceDocument()	{
		command_Root2.setNext(command_SplitOnce__HeaderAndConent2);
		command_SplitOnce__HeaderAndConent2.setFirst(command_RepeatSplit_HeaderRows2);
		command_RepeatSplit_HeaderRows2.setNext(command_SwitchEachContentLine2);
		command_SwitchEachContentLine2.conditions[0].setNext(command_L1__ONDEMANDJob2);
		command_SwitchEachContentLine2.conditions[1].setNext(command_L2__Date_line2);
		command_SwitchEachContentLine2.conditions[2].setNext(command_L3___Pgm_Line2);
		command_SwitchEachContentLine2.conditions[3].setNext(command_L4__Generator_Line2);
		command_SwitchEachContentLine2.conditions[4].setNext(command_L5__Archive_File_Name_2);
		command_SplitOnce__HeaderAndConent2.setNext(command_Repeated_split__Content_blocks2);
		command_Repeated_split__Content_blocks2.setNext(command_Switch4);
		command_Switch4.conditions[0].setNext(command_Repeated_split__Block_starting_with_ASSET_2);
		command_Repeated_split__Block_starting_with_ASSET_2.setNext(command_Switch5);
		command_Switch5.conditions[0].setNext(command_FLF3);
		command_Switch5.conditions[1].setNext(command_FLF22);
		command_Switch4.conditions[1].setNext(command_Node_Ignore_block_starting_with_CR_LF2);

		rootCommand = command_Root2;
	}
}


