////////////////////////////////////////////////////////////////////////
//
// EDIHL7DataCompletion.java
//
// This file was generated by MapForce 2011.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

package com.altova.text.edi;

import com.altova.text.ITextNode;

public class EDIHL7DataCompletion extends DataCompletion {
    private EDIHL7Settings mSettings = null;

    public EDIHL7DataCompletion(EDIHL7Settings settings, String structurename) {
        super(structurename);
        mSettings = settings;
    }

    public void completeData(ITextNode dataroot, Particle rootParticle) {
        completeMandatory(dataroot, rootParticle);

        CompleteMSH( makeSureExists( dataroot, "MSH"));
    }

    private void CompleteMSH(ITextNode msh) {
        //MSH-1 Data element separator
        ITextNode msh1 = makeSureExists( msh, "MSH-1");
        //this value will be overwritten, it just needs to be set
        conservativeSetValue( msh1, mSettings.getServiceChars().getDataElementSeparator());

        //MSH-2 Encoding Characters
        ITextNode msh2 = makeSureExists( msh, "MSH-2");
        //this value will be overwritten, it just needs to be set
        conservativeSetValue(
                msh2,
                "" + mSettings.getServiceChars().getComponentSeparator() +
                mSettings.getServiceChars().getRepetitionSeparator() +
                mSettings.getServiceChars().getReleaseCharacter() +
                mSettings.getServiceChars().getSubComponentSeparator()
        );

        //MSH-7 Date/Time of Message
        ITextNode msh7 = makeSureExists( msh, "MSH-7");
        if( mSettings.getRelease().equals( "2.6" ) )
            conservativeSetValue( msh7, getCurrentDateAsEDIString(4) + getCurrentTimeAsEDIString());
        else
        {
            ITextNode ts1 = makeSureExists( msh7, "TS-1");
            conservativeSetValue( ts1, getCurrentDateAsEDIString(4) + getCurrentTimeAsEDIString());
        }

        //MSH-9 Message Type
        ITextNode msh9 = makeSureExists( msh, "MSH-9");
        CompleteMSG( msh9);

        //MSH-12 Version ID
        ITextNode msh12 = makeSureExists( msh, "MSH-12");
        ITextNode vid1 = makeSureExists( msh12 , "VID-1");
        conservativeSetValue( vid1, mSettings.getRelease());
    }

    private void CompleteMSG( ITextNode msg)
    {
        //the example MSG Type is: QBP_Z73
        String[] structure = m_StructureName.split( "_");
        
        //Message Code: QBP
        ITextNode msg1 = makeSureExists( msg, "MSG-1");
        conservativeSetValue( msg1, structure[0]);

        //Trigger Event: Z73
        ITextNode msg2 = makeSureExists( msg, "MSG-2");
        conservativeSetValue( msg2, structure[1]);

        //Message Structure: QBP_Z73
        ITextNode msg3 = makeSureExists( msg, "MSG-3");
        conservativeSetValue( msg3, m_StructureName);
    }
}
