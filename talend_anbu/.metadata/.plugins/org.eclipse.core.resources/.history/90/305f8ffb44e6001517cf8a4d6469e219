// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package local_project.step01_stage_salesforce_data_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.DemoRoutines;
import routines.GetRandomPhoneNum;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")
/**
 * Job: Step01_Stage_salesforce_data Purpose: <br>
 * Description:  <br>
 * @author user@talend.com
 * @version 6.1.1.20151214_1327
 * @status 
 */
public class Step01_Stage_salesforce_data implements TalendJob {

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private Object[] multiThreadLockWrite = new Object[0];

	private final static String defaultCharset = java.nio.charset.Charset
			.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends java.util.Properties {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

	}

	private ContextProperties context = new ContextProperties();

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "Step01_Stage_salesforce_data";
	private final String projectName = "LOCAL_PROJECT";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Object>());

	private final java.util.Map<String, Long> start_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Long>());
	private final java.util.Map<String, Long> end_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Long>());
	private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Boolean>());
	public final java.util.List<String[]> globalBuffer = java.util.Collections
			.synchronizedList(new java.util.ArrayList<String[]>());

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	public void setDataSources(
			java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources
				.entrySet()) {
			talendDataSources.put(
					dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry
							.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(
			new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent,
				final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null
						&& currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE",
							getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE",
						getExceptionCauseMessage(e));
				System.err
						.println("Exception in component " + currentComponent);
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					Step01_Stage_salesforce_data.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass()
							.getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(Step01_Stage_salesforce_data.this,
									new Object[] { e, currentComponent,
											globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tSalesforceInput_1_error(Exception exception,
			String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		((java.util.Map) threadLocal.get()).put("status", "failure");

		tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tPostgresqlOutput_1_error(Exception exception,
			String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		((java.util.Map) threadLocal.get()).put("status", "failure");

		tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSalesforceInput_1_onSubJobError(Exception exception,
			String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread
				.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(),
				ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row1Struct implements
			routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_LOCAL_PROJECT_Step01_Stage_salesforce_data = new byte[0];
		static byte[] commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data = new byte[0];

		public String Id;

		public String getId() {
			return this.Id;
		}

		public Boolean IsDeleted;

		public Boolean getIsDeleted() {
			return this.IsDeleted;
		}

		public String MasterRecordId;

		public String getMasterRecordId() {
			return this.MasterRecordId;
		}

		public String Name;

		public String getName() {
			return this.Name;
		}

		public String Type;

		public String getType() {
			return this.Type;
		}

		public String ParentId;

		public String getParentId() {
			return this.ParentId;
		}

		public String BillingStreet;

		public String getBillingStreet() {
			return this.BillingStreet;
		}

		public String BillingCity;

		public String getBillingCity() {
			return this.BillingCity;
		}

		public String BillingState;

		public String getBillingState() {
			return this.BillingState;
		}

		public String BillingPostalCode;

		public String getBillingPostalCode() {
			return this.BillingPostalCode;
		}

		public String BillingCountry;

		public String getBillingCountry() {
			return this.BillingCountry;
		}

		public String BillingStateCode;

		public String getBillingStateCode() {
			return this.BillingStateCode;
		}

		public String BillingCountryCode;

		public String getBillingCountryCode() {
			return this.BillingCountryCode;
		}

		public Double BillingLatitude;

		public Double getBillingLatitude() {
			return this.BillingLatitude;
		}

		public Double BillingLongitude;

		public Double getBillingLongitude() {
			return this.BillingLongitude;
		}

		public String BillingAddress;

		public String getBillingAddress() {
			return this.BillingAddress;
		}

		public String ShippingStreet;

		public String getShippingStreet() {
			return this.ShippingStreet;
		}

		public String ShippingCity;

		public String getShippingCity() {
			return this.ShippingCity;
		}

		public String ShippingState;

		public String getShippingState() {
			return this.ShippingState;
		}

		public String ShippingPostalCode;

		public String getShippingPostalCode() {
			return this.ShippingPostalCode;
		}

		public String ShippingCountry;

		public String getShippingCountry() {
			return this.ShippingCountry;
		}

		public String ShippingStateCode;

		public String getShippingStateCode() {
			return this.ShippingStateCode;
		}

		public String ShippingCountryCode;

		public String getShippingCountryCode() {
			return this.ShippingCountryCode;
		}

		public Double ShippingLatitude;

		public Double getShippingLatitude() {
			return this.ShippingLatitude;
		}

		public Double ShippingLongitude;

		public Double getShippingLongitude() {
			return this.ShippingLongitude;
		}

		public String ShippingAddress;

		public String getShippingAddress() {
			return this.ShippingAddress;
		}

		public String Phone;

		public String getPhone() {
			return this.Phone;
		}

		public String Fax;

		public String getFax() {
			return this.Fax;
		}

		public String AccountNumber;

		public String getAccountNumber() {
			return this.AccountNumber;
		}

		public String Website;

		public String getWebsite() {
			return this.Website;
		}

		public String PhotoUrl;

		public String getPhotoUrl() {
			return this.PhotoUrl;
		}

		public String Sic;

		public String getSic() {
			return this.Sic;
		}

		public String Industry;

		public String getIndustry() {
			return this.Industry;
		}

		public Double AnnualRevenue;

		public Double getAnnualRevenue() {
			return this.AnnualRevenue;
		}

		public Integer NumberOfEmployees;

		public Integer getNumberOfEmployees() {
			return this.NumberOfEmployees;
		}

		public String Ownership;

		public String getOwnership() {
			return this.Ownership;
		}

		public String TickerSymbol;

		public String getTickerSymbol() {
			return this.TickerSymbol;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Rating;

		public String getRating() {
			return this.Rating;
		}

		public String Site;

		public String getSite() {
			return this.Site;
		}

		public String CurrencyIsoCode;

		public String getCurrencyIsoCode() {
			return this.CurrencyIsoCode;
		}

		public String OwnerId;

		public String getOwnerId() {
			return this.OwnerId;
		}

		public java.util.Date CreatedDate;

		public java.util.Date getCreatedDate() {
			return this.CreatedDate;
		}

		public String CreatedById;

		public String getCreatedById() {
			return this.CreatedById;
		}

		public java.util.Date LastModifiedDate;

		public java.util.Date getLastModifiedDate() {
			return this.LastModifiedDate;
		}

		public String LastModifiedById;

		public String getLastModifiedById() {
			return this.LastModifiedById;
		}

		public java.util.Date SystemModstamp;

		public java.util.Date getSystemModstamp() {
			return this.SystemModstamp;
		}

		public java.util.Date LastActivityDate;

		public java.util.Date getLastActivityDate() {
			return this.LastActivityDate;
		}

		public java.util.Date LastViewedDate;

		public java.util.Date getLastViewedDate() {
			return this.LastViewedDate;
		}

		public java.util.Date LastReferencedDate;

		public java.util.Date getLastReferencedDate() {
			return this.LastReferencedDate;
		}

		public String Jigsaw;

		public String getJigsaw() {
			return this.Jigsaw;
		}

		public String JigsawCompanyId;

		public String getJigsawCompanyId() {
			return this.JigsawCompanyId;
		}

		public String AccountSource;

		public String getAccountSource() {
			return this.AccountSource;
		}

		public String SicDesc;

		public String getSicDesc() {
			return this.SicDesc;
		}

		public String Sold_To_Name__c;

		public String getSold_To_Name__c() {
			return this.Sold_To_Name__c;
		}

		public String Contact_Type__c;

		public String getContact_Type__c() {
			return this.Contact_Type__c;
		}

		public String Affiliation__c;

		public String getAffiliation__c() {
			return this.Affiliation__c;
		}

		public String FN__Find_Nearby__c;

		public String getFN__Find_Nearby__c() {
			return this.FN__Find_Nearby__c;
		}

		public Double FN__Lat__c;

		public Double getFN__Lat__c() {
			return this.FN__Lat__c;
		}

		public Double FN__Lon__c;

		public Double getFN__Lon__c() {
			return this.FN__Lon__c;
		}

		public String FN__Mapping_Status__c;

		public String getFN__Mapping_Status__c() {
			return this.FN__Mapping_Status__c;
		}

		public String FN__Which_Address__c;

		public String getFN__Which_Address__c() {
			return this.FN__Which_Address__c;
		}

		public Double Total_Opportunities__c;

		public Double getTotal_Opportunities__c() {
			return this.Total_Opportunities__c;
		}

		public Double Total_Amount_Open__c;

		public Double getTotal_Amount_Open__c() {
			return this.Total_Amount_Open__c;
		}

		public Double Total_Amount_Won__c;

		public Double getTotal_Amount_Won__c() {
			return this.Total_Amount_Won__c;
		}

		public String Map_This_Account__c;

		public String getMap_This_Account__c() {
			return this.Map_This_Account__c;
		}

		public String Account_Number__c;

		public String getAccount_Number__c() {
			return this.Account_Number__c;
		}

		public String Other_Account_Type__c;

		public String getOther_Account_Type__c() {
			return this.Other_Account_Type__c;
		}

		public String Affiliations__c;

		public String getAffiliations__c() {
			return this.Affiliations__c;
		}

		public String Bill_To_Phone__c;

		public String getBill_To_Phone__c() {
			return this.Bill_To_Phone__c;
		}

		public String Bill_To_Contact__c;

		public String getBill_To_Contact__c() {
			return this.Bill_To_Contact__c;
		}

		public String Clinical_Sales_Territory__c;

		public String getClinical_Sales_Territory__c() {
			return this.Clinical_Sales_Territory__c;
		}

		public String Ship_Attn_To__c;

		public String getShip_Attn_To__c() {
			return this.Ship_Attn_To__c;
		}

		public String Tax_Exempt__c;

		public String getTax_Exempt__c() {
			return this.Tax_Exempt__c;
		}

		public Double Tech_Access_Fee_Rate__c;

		public Double getTech_Access_Fee_Rate__c() {
			return this.Tech_Access_Fee_Rate__c;
		}

		public String Workspace_ID__c;

		public String getWorkspace_ID__c() {
			return this.Workspace_ID__c;
		}

		public String Bill_To_Name__c;

		public String getBill_To_Name__c() {
			return this.Bill_To_Name__c;
		}

		public String Ship_To_Name__c;

		public String getShip_To_Name__c() {
			return this.Ship_To_Name__c;
		}

		public String Currency_Code__c;

		public String getCurrency_Code__c() {
			return this.Currency_Code__c;
		}

		public String Account_Types__c;

		public String getAccount_Types__c() {
			return this.Account_Types__c;
		}

		public String Group_Code__c;

		public String getGroup_Code__c() {
			return this.Group_Code__c;
		}

		public String Workspace_Name__c;

		public String getWorkspace_Name__c() {
			return this.Workspace_Name__c;
		}

		public String Secure_Fax__c;

		public String getSecure_Fax__c() {
			return this.Secure_Fax__c;
		}

		public String Secure_Email__c;

		public String getSecure_Email__c() {
			return this.Secure_Email__c;
		}

		public String Bill_To_Email__c;

		public String getBill_To_Email__c() {
			return this.Bill_To_Email__c;
		}

		public String Ship_To_Email__c;

		public String getShip_To_Email__c() {
			return this.Ship_To_Email__c;
		}

		public String Broker_Tax_ID__c;

		public String getBroker_Tax_ID__c() {
			return this.Broker_Tax_ID__c;
		}

		public Double X2014_Revenues__c;

		public Double getX2014_Revenues__c() {
			return this.X2014_Revenues__c;
		}

		public String Sales_Territory__c;

		public String getSales_Territory__c() {
			return this.Sales_Territory__c;
		}

		public String AVA_SFCORE__Billing_Last_Validated__c;

		public String getAVA_SFCORE__Billing_Last_Validated__c() {
			return this.AVA_SFCORE__Billing_Last_Validated__c;
		}

		public String AVA_SFCORE__ExemptEntityType__c;

		public String getAVA_SFCORE__ExemptEntityType__c() {
			return this.AVA_SFCORE__ExemptEntityType__c;
		}

		public String AVA_SFCORE__Shipping_Last_Validated__c;

		public String getAVA_SFCORE__Shipping_Last_Validated__c() {
			return this.AVA_SFCORE__Shipping_Last_Validated__c;
		}

		public String Tier__c;

		public String getTier__c() {
			return this.Tier__c;
		}

		public String Field_App_Scientist__c;

		public String getField_App_Scientist__c() {
			return this.Field_App_Scientist__c;
		}

		public String Immunoseq_competitor__c;

		public String getImmunoseq_competitor__c() {
			return this.Immunoseq_competitor__c;
		}

		public String Broker_ID__c;

		public String getBroker_ID__c() {
			return this.Broker_ID__c;
		}

		public String External_Account_ID_Number__c;

		public String getExternal_Account_ID_Number__c() {
			return this.External_Account_ID_Number__c;
		}

		public String VAT__c;

		public String getVAT__c() {
			return this.VAT__c;
		}

		public String Region__c;

		public String getRegion__c() {
			return this.Region__c;
		}

		public String Priority__c;

		public String getPriority__c() {
			return this.Priority__c;
		}

		public String Ship_To_Contact__c;

		public String getShip_To_Contact__c() {
			return this.Ship_To_Contact__c;
		}

		public String Sold_To_Street__c;

		public String getSold_To_Street__c() {
			return this.Sold_To_Street__c;
		}

		public String Sold_To_City__c;

		public String getSold_To_City__c() {
			return this.Sold_To_City__c;
		}

		public String Sold_To_State__c;

		public String getSold_To_State__c() {
			return this.Sold_To_State__c;
		}

		public String Sold_To_Country__c;

		public String getSold_To_Country__c() {
			return this.Sold_To_Country__c;
		}

		public String Sold_To_Zip__c;

		public String getSold_To_Zip__c() {
			return this.Sold_To_Zip__c;
		}

		public String Market_Segment__c;

		public String getMarket_Segment__c() {
			return this.Market_Segment__c;
		}

		public String Ship_to_Contact_Phone__c;

		public String getShip_to_Contact_Phone__c() {
			return this.Ship_to_Contact_Phone__c;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data.length) {
					if (length < 1024
							&& commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data.length == 0) {
						commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data = new byte[1024];
					} else {
						commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data = new byte[2 * length];
					}
				}
				dis.readFully(
						commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data,
						0, length);
				strReturn = new String(
						commonByteArray_LOCAL_PROJECT_Step01_Stage_salesforce_data,
						0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos)
				throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos)
				throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis)
				throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos)
				throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_LOCAL_PROJECT_Step01_Stage_salesforce_data) {

				try {

					int length = 0;

					this.Id = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.IsDeleted = null;
					} else {
						this.IsDeleted = dis.readBoolean();
					}

					this.MasterRecordId = readString(dis);

					this.Name = readString(dis);

					this.Type = readString(dis);

					this.ParentId = readString(dis);

					this.BillingStreet = readString(dis);

					this.BillingCity = readString(dis);

					this.BillingState = readString(dis);

					this.BillingPostalCode = readString(dis);

					this.BillingCountry = readString(dis);

					this.BillingStateCode = readString(dis);

					this.BillingCountryCode = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.BillingLatitude = null;
					} else {
						this.BillingLatitude = dis.readDouble();
					}

					length = dis.readByte();
					if (length == -1) {
						this.BillingLongitude = null;
					} else {
						this.BillingLongitude = dis.readDouble();
					}

					this.BillingAddress = readString(dis);

					this.ShippingStreet = readString(dis);

					this.ShippingCity = readString(dis);

					this.ShippingState = readString(dis);

					this.ShippingPostalCode = readString(dis);

					this.ShippingCountry = readString(dis);

					this.ShippingStateCode = readString(dis);

					this.ShippingCountryCode = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.ShippingLatitude = null;
					} else {
						this.ShippingLatitude = dis.readDouble();
					}

					length = dis.readByte();
					if (length == -1) {
						this.ShippingLongitude = null;
					} else {
						this.ShippingLongitude = dis.readDouble();
					}

					this.ShippingAddress = readString(dis);

					this.Phone = readString(dis);

					this.Fax = readString(dis);

					this.AccountNumber = readString(dis);

					this.Website = readString(dis);

					this.PhotoUrl = readString(dis);

					this.Sic = readString(dis);

					this.Industry = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.AnnualRevenue = null;
					} else {
						this.AnnualRevenue = dis.readDouble();
					}

					this.NumberOfEmployees = readInteger(dis);

					this.Ownership = readString(dis);

					this.TickerSymbol = readString(dis);

					this.Description = readString(dis);

					this.Rating = readString(dis);

					this.Site = readString(dis);

					this.CurrencyIsoCode = readString(dis);

					this.OwnerId = readString(dis);

					this.CreatedDate = readDate(dis);

					this.CreatedById = readString(dis);

					this.LastModifiedDate = readDate(dis);

					this.LastModifiedById = readString(dis);

					this.SystemModstamp = readDate(dis);

					this.LastActivityDate = readDate(dis);

					this.LastViewedDate = readDate(dis);

					this.LastReferencedDate = readDate(dis);

					this.Jigsaw = readString(dis);

					this.JigsawCompanyId = readString(dis);

					this.AccountSource = readString(dis);

					this.SicDesc = readString(dis);

					this.Sold_To_Name__c = readString(dis);

					this.Contact_Type__c = readString(dis);

					this.Affiliation__c = readString(dis);

					this.FN__Find_Nearby__c = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.FN__Lat__c = null;
					} else {
						this.FN__Lat__c = dis.readDouble();
					}

					length = dis.readByte();
					if (length == -1) {
						this.FN__Lon__c = null;
					} else {
						this.FN__Lon__c = dis.readDouble();
					}

					this.FN__Mapping_Status__c = readString(dis);

					this.FN__Which_Address__c = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Opportunities__c = null;
					} else {
						this.Total_Opportunities__c = dis.readDouble();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Amount_Open__c = null;
					} else {
						this.Total_Amount_Open__c = dis.readDouble();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Amount_Won__c = null;
					} else {
						this.Total_Amount_Won__c = dis.readDouble();
					}

					this.Map_This_Account__c = readString(dis);

					this.Account_Number__c = readString(dis);

					this.Other_Account_Type__c = readString(dis);

					this.Affiliations__c = readString(dis);

					this.Bill_To_Phone__c = readString(dis);

					this.Bill_To_Contact__c = readString(dis);

					this.Clinical_Sales_Territory__c = readString(dis);

					this.Ship_Attn_To__c = readString(dis);

					this.Tax_Exempt__c = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Tech_Access_Fee_Rate__c = null;
					} else {
						this.Tech_Access_Fee_Rate__c = dis.readDouble();
					}

					this.Workspace_ID__c = readString(dis);

					this.Bill_To_Name__c = readString(dis);

					this.Ship_To_Name__c = readString(dis);

					this.Currency_Code__c = readString(dis);

					this.Account_Types__c = readString(dis);

					this.Group_Code__c = readString(dis);

					this.Workspace_Name__c = readString(dis);

					this.Secure_Fax__c = readString(dis);

					this.Secure_Email__c = readString(dis);

					this.Bill_To_Email__c = readString(dis);

					this.Ship_To_Email__c = readString(dis);

					this.Broker_Tax_ID__c = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.X2014_Revenues__c = null;
					} else {
						this.X2014_Revenues__c = dis.readDouble();
					}

					this.Sales_Territory__c = readString(dis);

					this.AVA_SFCORE__Billing_Last_Validated__c = readString(dis);

					this.AVA_SFCORE__ExemptEntityType__c = readString(dis);

					this.AVA_SFCORE__Shipping_Last_Validated__c = readString(dis);

					this.Tier__c = readString(dis);

					this.Field_App_Scientist__c = readString(dis);

					this.Immunoseq_competitor__c = readString(dis);

					this.Broker_ID__c = readString(dis);

					this.External_Account_ID_Number__c = readString(dis);

					this.VAT__c = readString(dis);

					this.Region__c = readString(dis);

					this.Priority__c = readString(dis);

					this.Ship_To_Contact__c = readString(dis);

					this.Sold_To_Street__c = readString(dis);

					this.Sold_To_City__c = readString(dis);

					this.Sold_To_State__c = readString(dis);

					this.Sold_To_Country__c = readString(dis);

					this.Sold_To_Zip__c = readString(dis);

					this.Market_Segment__c = readString(dis);

					this.Ship_to_Contact_Phone__c = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Id, dos);

				// Boolean

				if (this.IsDeleted == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.IsDeleted);
				}

				// String

				writeString(this.MasterRecordId, dos);

				// String

				writeString(this.Name, dos);

				// String

				writeString(this.Type, dos);

				// String

				writeString(this.ParentId, dos);

				// String

				writeString(this.BillingStreet, dos);

				// String

				writeString(this.BillingCity, dos);

				// String

				writeString(this.BillingState, dos);

				// String

				writeString(this.BillingPostalCode, dos);

				// String

				writeString(this.BillingCountry, dos);

				// String

				writeString(this.BillingStateCode, dos);

				// String

				writeString(this.BillingCountryCode, dos);

				// Double

				if (this.BillingLatitude == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.BillingLatitude);
				}

				// Double

				if (this.BillingLongitude == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.BillingLongitude);
				}

				// String

				writeString(this.BillingAddress, dos);

				// String

				writeString(this.ShippingStreet, dos);

				// String

				writeString(this.ShippingCity, dos);

				// String

				writeString(this.ShippingState, dos);

				// String

				writeString(this.ShippingPostalCode, dos);

				// String

				writeString(this.ShippingCountry, dos);

				// String

				writeString(this.ShippingStateCode, dos);

				// String

				writeString(this.ShippingCountryCode, dos);

				// Double

				if (this.ShippingLatitude == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.ShippingLatitude);
				}

				// Double

				if (this.ShippingLongitude == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.ShippingLongitude);
				}

				// String

				writeString(this.ShippingAddress, dos);

				// String

				writeString(this.Phone, dos);

				// String

				writeString(this.Fax, dos);

				// String

				writeString(this.AccountNumber, dos);

				// String

				writeString(this.Website, dos);

				// String

				writeString(this.PhotoUrl, dos);

				// String

				writeString(this.Sic, dos);

				// String

				writeString(this.Industry, dos);

				// Double

				if (this.AnnualRevenue == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.AnnualRevenue);
				}

				// Integer

				writeInteger(this.NumberOfEmployees, dos);

				// String

				writeString(this.Ownership, dos);

				// String

				writeString(this.TickerSymbol, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Rating, dos);

				// String

				writeString(this.Site, dos);

				// String

				writeString(this.CurrencyIsoCode, dos);

				// String

				writeString(this.OwnerId, dos);

				// java.util.Date

				writeDate(this.CreatedDate, dos);

				// String

				writeString(this.CreatedById, dos);

				// java.util.Date

				writeDate(this.LastModifiedDate, dos);

				// String

				writeString(this.LastModifiedById, dos);

				// java.util.Date

				writeDate(this.SystemModstamp, dos);

				// java.util.Date

				writeDate(this.LastActivityDate, dos);

				// java.util.Date

				writeDate(this.LastViewedDate, dos);

				// java.util.Date

				writeDate(this.LastReferencedDate, dos);

				// String

				writeString(this.Jigsaw, dos);

				// String

				writeString(this.JigsawCompanyId, dos);

				// String

				writeString(this.AccountSource, dos);

				// String

				writeString(this.SicDesc, dos);

				// String

				writeString(this.Sold_To_Name__c, dos);

				// String

				writeString(this.Contact_Type__c, dos);

				// String

				writeString(this.Affiliation__c, dos);

				// String

				writeString(this.FN__Find_Nearby__c, dos);

				// Double

				if (this.FN__Lat__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.FN__Lat__c);
				}

				// Double

				if (this.FN__Lon__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.FN__Lon__c);
				}

				// String

				writeString(this.FN__Mapping_Status__c, dos);

				// String

				writeString(this.FN__Which_Address__c, dos);

				// Double

				if (this.Total_Opportunities__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Total_Opportunities__c);
				}

				// Double

				if (this.Total_Amount_Open__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Total_Amount_Open__c);
				}

				// Double

				if (this.Total_Amount_Won__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Total_Amount_Won__c);
				}

				// String

				writeString(this.Map_This_Account__c, dos);

				// String

				writeString(this.Account_Number__c, dos);

				// String

				writeString(this.Other_Account_Type__c, dos);

				// String

				writeString(this.Affiliations__c, dos);

				// String

				writeString(this.Bill_To_Phone__c, dos);

				// String

				writeString(this.Bill_To_Contact__c, dos);

				// String

				writeString(this.Clinical_Sales_Territory__c, dos);

				// String

				writeString(this.Ship_Attn_To__c, dos);

				// String

				writeString(this.Tax_Exempt__c, dos);

				// Double

				if (this.Tech_Access_Fee_Rate__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Tech_Access_Fee_Rate__c);
				}

				// String

				writeString(this.Workspace_ID__c, dos);

				// String

				writeString(this.Bill_To_Name__c, dos);

				// String

				writeString(this.Ship_To_Name__c, dos);

				// String

				writeString(this.Currency_Code__c, dos);

				// String

				writeString(this.Account_Types__c, dos);

				// String

				writeString(this.Group_Code__c, dos);

				// String

				writeString(this.Workspace_Name__c, dos);

				// String

				writeString(this.Secure_Fax__c, dos);

				// String

				writeString(this.Secure_Email__c, dos);

				// String

				writeString(this.Bill_To_Email__c, dos);

				// String

				writeString(this.Ship_To_Email__c, dos);

				// String

				writeString(this.Broker_Tax_ID__c, dos);

				// Double

				if (this.X2014_Revenues__c == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.X2014_Revenues__c);
				}

				// String

				writeString(this.Sales_Territory__c, dos);

				// String

				writeString(this.AVA_SFCORE__Billing_Last_Validated__c, dos);

				// String

				writeString(this.AVA_SFCORE__ExemptEntityType__c, dos);

				// String

				writeString(this.AVA_SFCORE__Shipping_Last_Validated__c, dos);

				// String

				writeString(this.Tier__c, dos);

				// String

				writeString(this.Field_App_Scientist__c, dos);

				// String

				writeString(this.Immunoseq_competitor__c, dos);

				// String

				writeString(this.Broker_ID__c, dos);

				// String

				writeString(this.External_Account_ID_Number__c, dos);

				// String

				writeString(this.VAT__c, dos);

				// String

				writeString(this.Region__c, dos);

				// String

				writeString(this.Priority__c, dos);

				// String

				writeString(this.Ship_To_Contact__c, dos);

				// String

				writeString(this.Sold_To_Street__c, dos);

				// String

				writeString(this.Sold_To_City__c, dos);

				// String

				writeString(this.Sold_To_State__c, dos);

				// String

				writeString(this.Sold_To_Country__c, dos);

				// String

				writeString(this.Sold_To_Zip__c, dos);

				// String

				writeString(this.Market_Segment__c, dos);

				// String

				writeString(this.Ship_to_Contact_Phone__c, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Id=" + Id);
			sb.append(",IsDeleted=" + String.valueOf(IsDeleted));
			sb.append(",MasterRecordId=" + MasterRecordId);
			sb.append(",Name=" + Name);
			sb.append(",Type=" + Type);
			sb.append(",ParentId=" + ParentId);
			sb.append(",BillingStreet=" + BillingStreet);
			sb.append(",BillingCity=" + BillingCity);
			sb.append(",BillingState=" + BillingState);
			sb.append(",BillingPostalCode=" + BillingPostalCode);
			sb.append(",BillingCountry=" + BillingCountry);
			sb.append(",BillingStateCode=" + BillingStateCode);
			sb.append(",BillingCountryCode=" + BillingCountryCode);
			sb.append(",BillingLatitude=" + String.valueOf(BillingLatitude));
			sb.append(",BillingLongitude=" + String.valueOf(BillingLongitude));
			sb.append(",BillingAddress=" + BillingAddress);
			sb.append(",ShippingStreet=" + ShippingStreet);
			sb.append(",ShippingCity=" + ShippingCity);
			sb.append(",ShippingState=" + ShippingState);
			sb.append(",ShippingPostalCode=" + ShippingPostalCode);
			sb.append(",ShippingCountry=" + ShippingCountry);
			sb.append(",ShippingStateCode=" + ShippingStateCode);
			sb.append(",ShippingCountryCode=" + ShippingCountryCode);
			sb.append(",ShippingLatitude=" + String.valueOf(ShippingLatitude));
			sb.append(",ShippingLongitude=" + String.valueOf(ShippingLongitude));
			sb.append(",ShippingAddress=" + ShippingAddress);
			sb.append(",Phone=" + Phone);
			sb.append(",Fax=" + Fax);
			sb.append(",AccountNumber=" + AccountNumber);
			sb.append(",Website=" + Website);
			sb.append(",PhotoUrl=" + PhotoUrl);
			sb.append(",Sic=" + Sic);
			sb.append(",Industry=" + Industry);
			sb.append(",AnnualRevenue=" + String.valueOf(AnnualRevenue));
			sb.append(",NumberOfEmployees=" + String.valueOf(NumberOfEmployees));
			sb.append(",Ownership=" + Ownership);
			sb.append(",TickerSymbol=" + TickerSymbol);
			sb.append(",Description=" + Description);
			sb.append(",Rating=" + Rating);
			sb.append(",Site=" + Site);
			sb.append(",CurrencyIsoCode=" + CurrencyIsoCode);
			sb.append(",OwnerId=" + OwnerId);
			sb.append(",CreatedDate=" + String.valueOf(CreatedDate));
			sb.append(",CreatedById=" + CreatedById);
			sb.append(",LastModifiedDate=" + String.valueOf(LastModifiedDate));
			sb.append(",LastModifiedById=" + LastModifiedById);
			sb.append(",SystemModstamp=" + String.valueOf(SystemModstamp));
			sb.append(",LastActivityDate=" + String.valueOf(LastActivityDate));
			sb.append(",LastViewedDate=" + String.valueOf(LastViewedDate));
			sb.append(",LastReferencedDate="
					+ String.valueOf(LastReferencedDate));
			sb.append(",Jigsaw=" + Jigsaw);
			sb.append(",JigsawCompanyId=" + JigsawCompanyId);
			sb.append(",AccountSource=" + AccountSource);
			sb.append(",SicDesc=" + SicDesc);
			sb.append(",Sold_To_Name__c=" + Sold_To_Name__c);
			sb.append(",Contact_Type__c=" + Contact_Type__c);
			sb.append(",Affiliation__c=" + Affiliation__c);
			sb.append(",FN__Find_Nearby__c=" + FN__Find_Nearby__c);
			sb.append(",FN__Lat__c=" + String.valueOf(FN__Lat__c));
			sb.append(",FN__Lon__c=" + String.valueOf(FN__Lon__c));
			sb.append(",FN__Mapping_Status__c=" + FN__Mapping_Status__c);
			sb.append(",FN__Which_Address__c=" + FN__Which_Address__c);
			sb.append(",Total_Opportunities__c="
					+ String.valueOf(Total_Opportunities__c));
			sb.append(",Total_Amount_Open__c="
					+ String.valueOf(Total_Amount_Open__c));
			sb.append(",Total_Amount_Won__c="
					+ String.valueOf(Total_Amount_Won__c));
			sb.append(",Map_This_Account__c=" + Map_This_Account__c);
			sb.append(",Account_Number__c=" + Account_Number__c);
			sb.append(",Other_Account_Type__c=" + Other_Account_Type__c);
			sb.append(",Affiliations__c=" + Affiliations__c);
			sb.append(",Bill_To_Phone__c=" + Bill_To_Phone__c);
			sb.append(",Bill_To_Contact__c=" + Bill_To_Contact__c);
			sb.append(",Clinical_Sales_Territory__c="
					+ Clinical_Sales_Territory__c);
			sb.append(",Ship_Attn_To__c=" + Ship_Attn_To__c);
			sb.append(",Tax_Exempt__c=" + Tax_Exempt__c);
			sb.append(",Tech_Access_Fee_Rate__c="
					+ String.valueOf(Tech_Access_Fee_Rate__c));
			sb.append(",Workspace_ID__c=" + Workspace_ID__c);
			sb.append(",Bill_To_Name__c=" + Bill_To_Name__c);
			sb.append(",Ship_To_Name__c=" + Ship_To_Name__c);
			sb.append(",Currency_Code__c=" + Currency_Code__c);
			sb.append(",Account_Types__c=" + Account_Types__c);
			sb.append(",Group_Code__c=" + Group_Code__c);
			sb.append(",Workspace_Name__c=" + Workspace_Name__c);
			sb.append(",Secure_Fax__c=" + Secure_Fax__c);
			sb.append(",Secure_Email__c=" + Secure_Email__c);
			sb.append(",Bill_To_Email__c=" + Bill_To_Email__c);
			sb.append(",Ship_To_Email__c=" + Ship_To_Email__c);
			sb.append(",Broker_Tax_ID__c=" + Broker_Tax_ID__c);
			sb.append(",X2014_Revenues__c=" + String.valueOf(X2014_Revenues__c));
			sb.append(",Sales_Territory__c=" + Sales_Territory__c);
			sb.append(",AVA_SFCORE__Billing_Last_Validated__c="
					+ AVA_SFCORE__Billing_Last_Validated__c);
			sb.append(",AVA_SFCORE__ExemptEntityType__c="
					+ AVA_SFCORE__ExemptEntityType__c);
			sb.append(",AVA_SFCORE__Shipping_Last_Validated__c="
					+ AVA_SFCORE__Shipping_Last_Validated__c);
			sb.append(",Tier__c=" + Tier__c);
			sb.append(",Field_App_Scientist__c=" + Field_App_Scientist__c);
			sb.append(",Immunoseq_competitor__c=" + Immunoseq_competitor__c);
			sb.append(",Broker_ID__c=" + Broker_ID__c);
			sb.append(",External_Account_ID_Number__c="
					+ External_Account_ID_Number__c);
			sb.append(",VAT__c=" + VAT__c);
			sb.append(",Region__c=" + Region__c);
			sb.append(",Priority__c=" + Priority__c);
			sb.append(",Ship_To_Contact__c=" + Ship_To_Contact__c);
			sb.append(",Sold_To_Street__c=" + Sold_To_Street__c);
			sb.append(",Sold_To_City__c=" + Sold_To_City__c);
			sb.append(",Sold_To_State__c=" + Sold_To_State__c);
			sb.append(",Sold_To_Country__c=" + Sold_To_Country__c);
			sb.append(",Sold_To_Zip__c=" + Sold_To_Zip__c);
			sb.append(",Market_Segment__c=" + Market_Segment__c);
			sb.append(",Ship_to_Contact_Phone__c=" + Ship_to_Contact_Phone__c);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(),
						object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tSalesforceInput_1Process(
			final java.util.Map<String, Object> globalMap)
			throws TalendException {
		globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {

			String currentMethodName = new java.lang.Exception()
					.getStackTrace()[0].getMethodName();
			boolean resumeIt = currentMethodName.equals(resumeEntryMethodName);
			if (resumeEntryMethodName == null || resumeIt || globalResumeTicket) {// start
																					// the
																					// resume
				globalResumeTicket = true;

				row1Struct row1 = new row1Struct();

				/**
				 * [tPostgresqlOutput_1 begin ] start
				 */

				ok_Hash.put("tPostgresqlOutput_1", false);
				start_Hash.put("tPostgresqlOutput_1",
						System.currentTimeMillis());

				currentComponent = "tPostgresqlOutput_1";

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null) {

						runStat.updateStatOnConnection("row1" + iterateId, 0, 0);

					}
				}

				int tos_count_tPostgresqlOutput_1 = 0;

				String dbschema_tPostgresqlOutput_1 = null;
				dbschema_tPostgresqlOutput_1 = "cora";

				String tableName_tPostgresqlOutput_1 = null;
				if (dbschema_tPostgresqlOutput_1 == null
						|| dbschema_tPostgresqlOutput_1.trim().length() == 0) {
					tableName_tPostgresqlOutput_1 = "sf_account";
				} else {
					tableName_tPostgresqlOutput_1 = dbschema_tPostgresqlOutput_1
							+ "\".\"" + "sf_account";
				}

				int nb_line_tPostgresqlOutput_1 = 0;
				int nb_line_update_tPostgresqlOutput_1 = 0;
				int nb_line_inserted_tPostgresqlOutput_1 = 0;
				int nb_line_deleted_tPostgresqlOutput_1 = 0;
				int nb_line_rejected_tPostgresqlOutput_1 = 0;

				int deletedCount_tPostgresqlOutput_1 = 0;
				int updatedCount_tPostgresqlOutput_1 = 0;
				int insertedCount_tPostgresqlOutput_1 = 0;
				int rejectedCount_tPostgresqlOutput_1 = 0;

				boolean whetherReject_tPostgresqlOutput_1 = false;

				java.sql.Connection conn_tPostgresqlOutput_1 = null;
				String dbUser_tPostgresqlOutput_1 = null;

				java.lang.Class.forName("org.postgresql.Driver");
				String url_tPostgresqlOutput_1 = "jdbc:postgresql://"
						+ "localhost" + ":" + "5432" + "/" + "cora_db";
				dbUser_tPostgresqlOutput_1 = "cora";

				final String decryptedPassword_tPostgresqlOutput_1 = routines.system.PasswordEncryptUtil
						.decryptPassword("06900cf8b77d70ca");

				String dbPwd_tPostgresqlOutput_1 = decryptedPassword_tPostgresqlOutput_1;

				conn_tPostgresqlOutput_1 = java.sql.DriverManager
						.getConnection(url_tPostgresqlOutput_1,
								dbUser_tPostgresqlOutput_1,
								dbPwd_tPostgresqlOutput_1);

				resourceMap.put("conn_tPostgresqlOutput_1",
						conn_tPostgresqlOutput_1);
				conn_tPostgresqlOutput_1.setAutoCommit(false);
				int commitEvery_tPostgresqlOutput_1 = 1;
				int commitCounter_tPostgresqlOutput_1 = 0;

				int count_tPostgresqlOutput_1 = 0;
				java.sql.DatabaseMetaData dbMetaData_tPostgresqlOutput_1 = conn_tPostgresqlOutput_1
						.getMetaData();
				java.sql.ResultSet rsTable_tPostgresqlOutput_1 = dbMetaData_tPostgresqlOutput_1
						.getTables(null, null, null, new String[] { "TABLE" });
				boolean whetherExist_tPostgresqlOutput_1 = false;
				String defaultSchema_tPostgresqlOutput_1 = "public";
				if (dbschema_tPostgresqlOutput_1 == null
						|| dbschema_tPostgresqlOutput_1.trim().length() == 0) {
					java.sql.Statement stmtSchema_tPostgresqlOutput_1 = conn_tPostgresqlOutput_1
							.createStatement();
					java.sql.ResultSet rsSchema_tPostgresqlOutput_1 = stmtSchema_tPostgresqlOutput_1
							.executeQuery("select current_schema() ");
					while (rsSchema_tPostgresqlOutput_1.next()) {
						defaultSchema_tPostgresqlOutput_1 = rsSchema_tPostgresqlOutput_1
								.getString("current_schema");
					}
					rsSchema_tPostgresqlOutput_1.close();
					stmtSchema_tPostgresqlOutput_1.close();
				}
				while (rsTable_tPostgresqlOutput_1.next()) {
					String table_tPostgresqlOutput_1 = rsTable_tPostgresqlOutput_1
							.getString("TABLE_NAME");
					String schema_tPostgresqlOutput_1 = rsTable_tPostgresqlOutput_1
							.getString("TABLE_SCHEM");
					if (table_tPostgresqlOutput_1.equals("sf_account")
							&& (schema_tPostgresqlOutput_1
									.equals(dbschema_tPostgresqlOutput_1) || ((dbschema_tPostgresqlOutput_1 == null || dbschema_tPostgresqlOutput_1
									.trim().length() == 0) && defaultSchema_tPostgresqlOutput_1
									.equals(schema_tPostgresqlOutput_1)))) {
						whetherExist_tPostgresqlOutput_1 = true;
						break;
					}
				}
				rsTable_tPostgresqlOutput_1.close();
				if (whetherExist_tPostgresqlOutput_1) {
					java.sql.Statement stmtDrop_tPostgresqlOutput_1 = conn_tPostgresqlOutput_1
							.createStatement();
					stmtDrop_tPostgresqlOutput_1.execute("DROP TABLE \""
							+ tableName_tPostgresqlOutput_1 + "\"");
					stmtDrop_tPostgresqlOutput_1.close();
				}
				java.sql.Statement stmtCreate_tPostgresqlOutput_1 = conn_tPostgresqlOutput_1
						.createStatement();
				stmtCreate_tPostgresqlOutput_1
						.execute("CREATE TABLE \""
								+ tableName_tPostgresqlOutput_1
								+ "\"(\"Id\" VARCHAR(18)  ,\"IsDeleted\" BOOL ,\"MasterRecordId\" VARCHAR(18)  ,\"Name\" VARCHAR(255)  ,\"Type\" VARCHAR(40)  ,\"ParentId\" VARCHAR(18)  ,\"BillingStreet\" VARCHAR(255)  ,\"BillingCity\" VARCHAR(40)  ,\"BillingState\" VARCHAR(80)  ,\"BillingPostalCode\" VARCHAR(20)  ,\"BillingCountry\" VARCHAR(80)  ,\"BillingStateCode\" VARCHAR(10)  ,\"BillingCountryCode\" VARCHAR(10)  ,\"BillingLatitude\" FLOAT8 ,\"BillingLongitude\" FLOAT8 ,\"BillingAddress\" VARCHAR(10)  ,\"ShippingStreet\" VARCHAR(255)  ,\"ShippingCity\" VARCHAR(40)  ,\"ShippingState\" VARCHAR(80)  ,\"ShippingPostalCode\" VARCHAR(20)  ,\"ShippingCountry\" VARCHAR(80)  ,\"ShippingStateCode\" VARCHAR(10)  ,\"ShippingCountryCode\" VARCHAR(10)  ,\"ShippingLatitude\" FLOAT8 ,\"ShippingLongitude\" FLOAT8 ,\"ShippingAddress\" VARCHAR(10)  ,\"Phone\" VARCHAR(40)  ,\"Fax\" VARCHAR(40)  ,\"AccountNumber\" VARCHAR(40)  ,\"Website\" VARCHAR(255)  ,\"PhotoUrl\" VARCHAR(255)  ,\"Sic\" VARCHAR(20)  ,\"Industry\" VARCHAR(40)  ,\"AnnualRevenue\" FLOAT8 ,\"NumberOfEmployees\" INT4 ,\"Ownership\" VARCHAR(40)  ,\"TickerSymbol\" VARCHAR(20)  ,\"Description\" VARCHAR(32000)  ,\"Rating\" VARCHAR(40)  ,\"Site\" VARCHAR(80)  ,\"CurrencyIsoCode\" VARCHAR(3)  ,\"OwnerId\" VARCHAR(18)  ,\"CreatedDate\" TIMESTAMP ,\"CreatedById\" VARCHAR(18)  ,\"LastModifiedDate\" TIMESTAMP ,\"LastModifiedById\" VARCHAR(18)  ,\"SystemModstamp\" TIMESTAMP ,\"LastActivityDate\" TIMESTAMP ,\"LastViewedDate\" TIMESTAMP ,\"LastReferencedDate\" TIMESTAMP ,\"Jigsaw\" VARCHAR(20)  ,\"JigsawCompanyId\" VARCHAR(20)  ,\"AccountSource\" VARCHAR(40)  ,\"SicDesc\" VARCHAR(80)  ,\"Sold_To_Name__c\" VARCHAR(255)  ,\"Contact_Type__c\" VARCHAR(4099)  ,\"Affiliation__c\" VARCHAR(4099)  ,\"FN__Find_Nearby__c\" VARCHAR(1300)  ,\"FN__Lat__c\" FLOAT8 ,\"FN__Lon__c\" FLOAT8 ,\"FN__Mapping_Status__c\" VARCHAR(255)  ,\"FN__Which_Address__c\" VARCHAR(255)  ,\"Total_Opportunities__c\" FLOAT8 ,\"Total_Amount_Open__c\" FLOAT8 ,\"Total_Amount_Won__c\" FLOAT8 ,\"Map_This_Account__c\" VARCHAR(1300)  ,\"Account_Number__c\" VARCHAR(30)  ,\"Other_Account_Type__c\" VARCHAR(20)  ,\"Affiliations__c\" VARCHAR(255)  ,\"Bill_To_Phone__c\" VARCHAR(40)  ,\"Bill_To_Contact__c\" VARCHAR(50)  ,\"Clinical_Sales_Territory__c\" VARCHAR(255)  ,\"Ship_Attn_To__c\" VARCHAR(30)  ,\"Tax_Exempt__c\" VARCHAR(30)  ,\"Tech_Access_Fee_Rate__c\" FLOAT8 ,\"Workspace_ID__c\" VARCHAR(255)  ,\"Bill_To_Name__c\" VARCHAR(50)  ,\"Ship_To_Name__c\" VARCHAR(50)  ,\"Currency_Code__c\" VARCHAR(3)  ,\"Account_Types__c\" VARCHAR(4099)  ,\"Group_Code__c\" VARCHAR(5)  ,\"Workspace_Name__c\" VARCHAR(100)  ,\"Secure_Fax__c\" VARCHAR(40)  ,\"Secure_Email__c\" VARCHAR(80)  ,\"Bill_To_Email__c\" VARCHAR(80)  ,\"Ship_To_Email__c\" VARCHAR(80)  ,\"Broker_Tax_ID__c\" VARCHAR(30)  ,\"X2014_Revenues__c\" FLOAT8 ,\"Sales_Territory__c\" VARCHAR(255)  ,\"AVA_SFCORE__Billing_Last_Validated__c\" VARCHAR(20)  ,\"AVA_SFCORE__ExemptEntityType__c\" VARCHAR(18)  ,\"AVA_SFCORE__Shipping_Last_Validated__c\" VARCHAR(20)  ,\"Tier__c\" VARCHAR(255)  ,\"Field_App_Scientist__c\" VARCHAR(255)  ,\"Immunoseq_competitor__c\" VARCHAR(4099)  ,\"Broker_ID__c\" VARCHAR(30)  ,\"External_Account_ID_Number__c\" VARCHAR(30)  ,\"VAT__c\" VARCHAR(20)  ,\"Region__c\" VARCHAR(1300)  ,\"Priority__c\" VARCHAR(255)  ,\"Ship_To_Contact__c\" VARCHAR(18)  ,\"Sold_To_Street__c\" VARCHAR(255)  ,\"Sold_To_City__c\" VARCHAR(50)  ,\"Sold_To_State__c\" VARCHAR(50)  ,\"Sold_To_Country__c\" VARCHAR(50)  ,\"Sold_To_Zip__c\" VARCHAR(15)  ,\"Market_Segment__c\" VARCHAR(1300)  ,\"Ship_to_Contact_Phone__c\" VARCHAR(1300)  )");
				stmtCreate_tPostgresqlOutput_1.close();
				String insert_tPostgresqlOutput_1 = "INSERT INTO \""
						+ tableName_tPostgresqlOutput_1
						+ "\" (\"Id\",\"IsDeleted\",\"MasterRecordId\",\"Name\",\"Type\",\"ParentId\",\"BillingStreet\",\"BillingCity\",\"BillingState\",\"BillingPostalCode\",\"BillingCountry\",\"BillingStateCode\",\"BillingCountryCode\",\"BillingLatitude\",\"BillingLongitude\",\"BillingAddress\",\"ShippingStreet\",\"ShippingCity\",\"ShippingState\",\"ShippingPostalCode\",\"ShippingCountry\",\"ShippingStateCode\",\"ShippingCountryCode\",\"ShippingLatitude\",\"ShippingLongitude\",\"ShippingAddress\",\"Phone\",\"Fax\",\"AccountNumber\",\"Website\",\"PhotoUrl\",\"Sic\",\"Industry\",\"AnnualRevenue\",\"NumberOfEmployees\",\"Ownership\",\"TickerSymbol\",\"Description\",\"Rating\",\"Site\",\"CurrencyIsoCode\",\"OwnerId\",\"CreatedDate\",\"CreatedById\",\"LastModifiedDate\",\"LastModifiedById\",\"SystemModstamp\",\"LastActivityDate\",\"LastViewedDate\",\"LastReferencedDate\",\"Jigsaw\",\"JigsawCompanyId\",\"AccountSource\",\"SicDesc\",\"Sold_To_Name__c\",\"Contact_Type__c\",\"Affiliation__c\",\"FN__Find_Nearby__c\",\"FN__Lat__c\",\"FN__Lon__c\",\"FN__Mapping_Status__c\",\"FN__Which_Address__c\",\"Total_Opportunities__c\",\"Total_Amount_Open__c\",\"Total_Amount_Won__c\",\"Map_This_Account__c\",\"Account_Number__c\",\"Other_Account_Type__c\",\"Affiliations__c\",\"Bill_To_Phone__c\",\"Bill_To_Contact__c\",\"Clinical_Sales_Territory__c\",\"Ship_Attn_To__c\",\"Tax_Exempt__c\",\"Tech_Access_Fee_Rate__c\",\"Workspace_ID__c\",\"Bill_To_Name__c\",\"Ship_To_Name__c\",\"Currency_Code__c\",\"Account_Types__c\",\"Group_Code__c\",\"Workspace_Name__c\",\"Secure_Fax__c\",\"Secure_Email__c\",\"Bill_To_Email__c\",\"Ship_To_Email__c\",\"Broker_Tax_ID__c\",\"X2014_Revenues__c\",\"Sales_Territory__c\",\"AVA_SFCORE__Billing_Last_Validated__c\",\"AVA_SFCORE__ExemptEntityType__c\",\"AVA_SFCORE__Shipping_Last_Validated__c\",\"Tier__c\",\"Field_App_Scientist__c\",\"Immunoseq_competitor__c\",\"Broker_ID__c\",\"External_Account_ID_Number__c\",\"VAT__c\",\"Region__c\",\"Priority__c\",\"Ship_To_Contact__c\",\"Sold_To_Street__c\",\"Sold_To_City__c\",\"Sold_To_State__c\",\"Sold_To_Country__c\",\"Sold_To_Zip__c\",\"Market_Segment__c\",\"Ship_to_Contact_Phone__c\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
				java.sql.PreparedStatement pstmt_tPostgresqlOutput_1 = conn_tPostgresqlOutput_1
						.prepareStatement(insert_tPostgresqlOutput_1);

				/**
				 * [tPostgresqlOutput_1 begin ] stop
				 */

				/**
				 * [tSalesforceInput_1 begin ] start
				 */

				ok_Hash.put("tSalesforceInput_1", false);
				start_Hash
						.put("tSalesforceInput_1", System.currentTimeMillis());

				currentComponent = "tSalesforceInput_1";

				int tos_count_tSalesforceInput_1 = 0;

				int nb_line_tSalesforceInput_1 = 0;
				int limit_tSalesforceInput_1 = -1;
				System.setProperty("org.apache.commons.logging.Log",
						"org.apache.commons.logging.impl.NoOpLog");
				org.talend.salesforce.SforceConnection sforceConn_tSalesforceInput_1 = null;

				final String decryptedPassword_tSalesforceInput_1 = routines.system.PasswordEncryptUtil
						.decryptPassword("e1407a47965a9a143577d84771d1ba35fb585f6571da19148c9a430fa48f6f51f541553c89e6161f");
				sforceConn_tSalesforceInput_1 = new org.talend.salesforce.SforceBasicConnection.Builder(
						"https://login.salesforce.com/services/Soap/u/34.0",
						"pnatarajan@adaptivebiotech.com",
						decryptedPassword_tSalesforceInput_1).setTimeout(60000)
						.needCompression(false)

						.useHttpChunked(true).build();

				org.talend.salesforce.SforceManagement sfMgr_tSalesforceInput_1 = new org.talend.salesforce.SforceManagementImpl(
						sforceConn_tSalesforceInput_1);

				StringBuilder sql_tSalesforceInput_1 = new StringBuilder(
						"select ");
				sql_tSalesforceInput_1
						.append("Id,IsDeleted,MasterRecordId,Name,Type,ParentId,BillingStreet,BillingCity,BillingState,BillingPostalCode,BillingCountry,BillingStateCode,BillingCountryCode,BillingLatitude,BillingLongitude,BillingAddress,ShippingStreet,ShippingCity,ShippingState,ShippingPostalCode,ShippingCountry,ShippingStateCode,ShippingCountryCode,ShippingLatitude,ShippingLongitude,ShippingAddress,Phone,Fax,AccountNumber,Website,PhotoUrl,Sic,Industry,AnnualRevenue,NumberOfEmployees,Ownership,TickerSymbol,Description,Rating,Site,CurrencyIsoCode,OwnerId,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp,LastActivityDate,LastViewedDate,LastReferencedDate,Jigsaw,JigsawCompanyId,AccountSource,SicDesc,Sold_To_Name__c,Contact_Type__c,Affiliation__c,FN__Find_Nearby__c,FN__Lat__c,FN__Lon__c,FN__Mapping_Status__c,FN__Which_Address__c,Total_Opportunities__c,Total_Amount_Open__c,Total_Amount_Won__c,Map_This_Account__c,Account_Number__c,Other_Account_Type__c,Affiliations__c,Bill_To_Phone__c,Bill_To_Contact__c,Clinical_Sales_Territory__c,Ship_Attn_To__c,Tax_Exempt__c,Tech_Access_Fee_Rate__c,Workspace_ID__c,Bill_To_Name__c,Ship_To_Name__c,Currency_Code__c,Account_Types__c,Group_Code__c,Workspace_Name__c,Secure_Fax__c,Secure_Email__c,Bill_To_Email__c,Ship_To_Email__c,Broker_Tax_ID__c,X2014_Revenues__c,Sales_Territory__c,AVA_SFCORE__Billing_Last_Validated__c,AVA_SFCORE__ExemptEntityType__c,AVA_SFCORE__Shipping_Last_Validated__c,Tier__c,Field_App_Scientist__c,Immunoseq_competitor__c,Broker_ID__c,External_Account_ID_Number__c,VAT__c,Region__c,Priority__c,Ship_To_Contact__c,Sold_To_Street__c,Sold_To_City__c,Sold_To_State__c,Sold_To_Country__c,Sold_To_Zip__c,Market_Segment__c,Ship_to_Contact_Phone__c");

				sql_tSalesforceInput_1.append(" from ");
				sql_tSalesforceInput_1.append("Account");

				String condition_tSalesforceInput_1 = "";
				if (condition_tSalesforceInput_1 != null
						&& !("".equals(condition_tSalesforceInput_1))) {
					sql_tSalesforceInput_1.append(" where ").append(
							condition_tSalesforceInput_1);
				}

				com.salesforce.soap.partner.QueryResult qr_tSalesforceInput_1 = null;

				qr_tSalesforceInput_1 = sfMgr_tSalesforceInput_1.query(
						sql_tSalesforceInput_1.toString(), new Integer(250));

				org.talend.salesforce.TopConfig.VALUE_DELIMITER = ";";
				org.talend.salesforce.TopConfig.COLUMNNAME_DELIMTER = "_";

				org.talend.salesforce.TopQueryResult topqr_tSalesforceInput_1 = null;
				topqr_tSalesforceInput_1 = new org.talend.salesforce.TopQueryResult();
				topqr_tSalesforceInput_1
						.processTopQueryResult(qr_tSalesforceInput_1);

				boolean bContinue_tSalesforceInput_1 = true;

				while (bContinue_tSalesforceInput_1
						&& qr_tSalesforceInput_1 != null
						&& qr_tSalesforceInput_1.getRecords() != null) {

					java.util.List<org.talend.salesforce.TopRecord> allTopRecords_tSalesforceInput_1 = topqr_tSalesforceInput_1
							.getAllTopRecords();
					// process the query results
					for (int i_tSalesforceInput_1 = 0; i_tSalesforceInput_1 < allTopRecords_tSalesforceInput_1
							.size(); i_tSalesforceInput_1++) {

						org.talend.salesforce.TopRecord topRecord_tSalesforceInput_1 = allTopRecords_tSalesforceInput_1
								.get(i_tSalesforceInput_1);

						nb_line_tSalesforceInput_1++;
						Object valueObj_tSalesforceInput_1 = null;

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Id");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Id = value_tSalesforceInput_1;

						} else {
							row1.Id = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("IsDeleted");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.IsDeleted = ParserUtils
									.parseTo_Boolean(value_tSalesforceInput_1);

						} else {
							row1.IsDeleted = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("MasterRecordId");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.MasterRecordId = value_tSalesforceInput_1;

						} else {
							row1.MasterRecordId = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Name");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Name = value_tSalesforceInput_1;

						} else {
							row1.Name = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Type");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Type = value_tSalesforceInput_1;

						} else {
							row1.Type = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ParentId");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ParentId = value_tSalesforceInput_1;

						} else {
							row1.ParentId = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingStreet");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingStreet = value_tSalesforceInput_1;

						} else {
							row1.BillingStreet = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingCity");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingCity = value_tSalesforceInput_1;

						} else {
							row1.BillingCity = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingState");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingState = value_tSalesforceInput_1;

						} else {
							row1.BillingState = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingPostalCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingPostalCode = value_tSalesforceInput_1;

						} else {
							row1.BillingPostalCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingCountry");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingCountry = value_tSalesforceInput_1;

						} else {
							row1.BillingCountry = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingStateCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingStateCode = value_tSalesforceInput_1;

						} else {
							row1.BillingStateCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingCountryCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingCountryCode = value_tSalesforceInput_1;

						} else {
							row1.BillingCountryCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingLatitude");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingLatitude = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.BillingLatitude = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingLongitude");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingLongitude = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.BillingLongitude = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("BillingAddress");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.BillingAddress = value_tSalesforceInput_1;

						} else {
							row1.BillingAddress = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingStreet");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingStreet = value_tSalesforceInput_1;

						} else {
							row1.ShippingStreet = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingCity");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingCity = value_tSalesforceInput_1;

						} else {
							row1.ShippingCity = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingState");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingState = value_tSalesforceInput_1;

						} else {
							row1.ShippingState = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingPostalCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingPostalCode = value_tSalesforceInput_1;

						} else {
							row1.ShippingPostalCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingCountry");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingCountry = value_tSalesforceInput_1;

						} else {
							row1.ShippingCountry = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingStateCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingStateCode = value_tSalesforceInput_1;

						} else {
							row1.ShippingStateCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingCountryCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingCountryCode = value_tSalesforceInput_1;

						} else {
							row1.ShippingCountryCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingLatitude");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingLatitude = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.ShippingLatitude = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingLongitude");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingLongitude = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.ShippingLongitude = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("ShippingAddress");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.ShippingAddress = value_tSalesforceInput_1;

						} else {
							row1.ShippingAddress = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Phone");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Phone = value_tSalesforceInput_1;

						} else {
							row1.Phone = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Fax");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Fax = value_tSalesforceInput_1;

						} else {
							row1.Fax = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AccountNumber");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AccountNumber = value_tSalesforceInput_1;

						} else {
							row1.AccountNumber = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Website");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Website = value_tSalesforceInput_1;

						} else {
							row1.Website = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("PhotoUrl");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.PhotoUrl = value_tSalesforceInput_1;

						} else {
							row1.PhotoUrl = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sic");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sic = value_tSalesforceInput_1;

						} else {
							row1.Sic = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Industry");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Industry = value_tSalesforceInput_1;

						} else {
							row1.Industry = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AnnualRevenue");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AnnualRevenue = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.AnnualRevenue = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("NumberOfEmployees");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.NumberOfEmployees = ParserUtils
									.parseTo_Integer(value_tSalesforceInput_1);

						} else {
							row1.NumberOfEmployees = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ownership");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ownership = value_tSalesforceInput_1;

						} else {
							row1.Ownership = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("TickerSymbol");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.TickerSymbol = value_tSalesforceInput_1;

						} else {
							row1.TickerSymbol = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Description");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Description = value_tSalesforceInput_1;

						} else {
							row1.Description = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Rating");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Rating = value_tSalesforceInput_1;

						} else {
							row1.Rating = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Site");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Site = value_tSalesforceInput_1;

						} else {
							row1.Site = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("CurrencyIsoCode");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.CurrencyIsoCode = value_tSalesforceInput_1;

						} else {
							row1.CurrencyIsoCode = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("OwnerId");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.OwnerId = value_tSalesforceInput_1;

						} else {
							row1.OwnerId = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("CreatedDate");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.CreatedDate = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1,
									"yyyy-MM-dd'T'HH:mm:ss'.000Z'");

						} else {
							row1.CreatedDate = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("CreatedById");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.CreatedById = value_tSalesforceInput_1;

						} else {
							row1.CreatedById = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("LastModifiedDate");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.LastModifiedDate = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1,
									"yyyy-MM-dd'T'HH:mm:ss'.000Z'");

						} else {
							row1.LastModifiedDate = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("LastModifiedById");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.LastModifiedById = value_tSalesforceInput_1;

						} else {
							row1.LastModifiedById = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("SystemModstamp");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.SystemModstamp = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1,
									"yyyy-MM-dd'T'HH:mm:ss'.000Z'");

						} else {
							row1.SystemModstamp = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("LastActivityDate");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.LastActivityDate = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1, "yyyy-MM-dd");

						} else {
							row1.LastActivityDate = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("LastViewedDate");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.LastViewedDate = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1,
									"yyyy-MM-dd'T'HH:mm:ss'.000Z'");

						} else {
							row1.LastViewedDate = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("LastReferencedDate");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.LastReferencedDate = ParserUtils.parseTo_Date(
									value_tSalesforceInput_1,
									"yyyy-MM-dd'T'HH:mm:ss'.000Z'");

						} else {
							row1.LastReferencedDate = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Jigsaw");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Jigsaw = value_tSalesforceInput_1;

						} else {
							row1.Jigsaw = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("JigsawCompanyId");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.JigsawCompanyId = value_tSalesforceInput_1;

						} else {
							row1.JigsawCompanyId = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AccountSource");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AccountSource = value_tSalesforceInput_1;

						} else {
							row1.AccountSource = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("SicDesc");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.SicDesc = value_tSalesforceInput_1;

						} else {
							row1.SicDesc = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_Name__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_Name__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_Name__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Contact_Type__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Contact_Type__c = value_tSalesforceInput_1;

						} else {
							row1.Contact_Type__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Affiliation__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Affiliation__c = value_tSalesforceInput_1;

						} else {
							row1.Affiliation__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("FN__Find_Nearby__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.FN__Find_Nearby__c = value_tSalesforceInput_1;

						} else {
							row1.FN__Find_Nearby__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("FN__Lat__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.FN__Lat__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.FN__Lat__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("FN__Lon__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.FN__Lon__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.FN__Lon__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("FN__Mapping_Status__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.FN__Mapping_Status__c = value_tSalesforceInput_1;

						} else {
							row1.FN__Mapping_Status__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("FN__Which_Address__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.FN__Which_Address__c = value_tSalesforceInput_1;

						} else {
							row1.FN__Which_Address__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Total_Opportunities__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Total_Opportunities__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.Total_Opportunities__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Total_Amount_Open__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Total_Amount_Open__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.Total_Amount_Open__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Total_Amount_Won__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Total_Amount_Won__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.Total_Amount_Won__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Map_This_Account__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Map_This_Account__c = value_tSalesforceInput_1;

						} else {
							row1.Map_This_Account__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Account_Number__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Account_Number__c = value_tSalesforceInput_1;

						} else {
							row1.Account_Number__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Other_Account_Type__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Other_Account_Type__c = value_tSalesforceInput_1;

						} else {
							row1.Other_Account_Type__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Affiliations__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Affiliations__c = value_tSalesforceInput_1;

						} else {
							row1.Affiliations__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Bill_To_Phone__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Bill_To_Phone__c = value_tSalesforceInput_1;

						} else {
							row1.Bill_To_Phone__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Bill_To_Contact__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Bill_To_Contact__c = value_tSalesforceInput_1;

						} else {
							row1.Bill_To_Contact__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Clinical_Sales_Territory__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Clinical_Sales_Territory__c = value_tSalesforceInput_1;

						} else {
							row1.Clinical_Sales_Territory__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ship_Attn_To__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ship_Attn_To__c = value_tSalesforceInput_1;

						} else {
							row1.Ship_Attn_To__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Tax_Exempt__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Tax_Exempt__c = value_tSalesforceInput_1;

						} else {
							row1.Tax_Exempt__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Tech_Access_Fee_Rate__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Tech_Access_Fee_Rate__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.Tech_Access_Fee_Rate__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Workspace_ID__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Workspace_ID__c = value_tSalesforceInput_1;

						} else {
							row1.Workspace_ID__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Bill_To_Name__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Bill_To_Name__c = value_tSalesforceInput_1;

						} else {
							row1.Bill_To_Name__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ship_To_Name__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ship_To_Name__c = value_tSalesforceInput_1;

						} else {
							row1.Ship_To_Name__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Currency_Code__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Currency_Code__c = value_tSalesforceInput_1;

						} else {
							row1.Currency_Code__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Account_Types__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Account_Types__c = value_tSalesforceInput_1;

						} else {
							row1.Account_Types__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Group_Code__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Group_Code__c = value_tSalesforceInput_1;

						} else {
							row1.Group_Code__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Workspace_Name__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Workspace_Name__c = value_tSalesforceInput_1;

						} else {
							row1.Workspace_Name__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Secure_Fax__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Secure_Fax__c = value_tSalesforceInput_1;

						} else {
							row1.Secure_Fax__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Secure_Email__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Secure_Email__c = value_tSalesforceInput_1;

						} else {
							row1.Secure_Email__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Bill_To_Email__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Bill_To_Email__c = value_tSalesforceInput_1;

						} else {
							row1.Bill_To_Email__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ship_To_Email__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ship_To_Email__c = value_tSalesforceInput_1;

						} else {
							row1.Ship_To_Email__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Broker_Tax_ID__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Broker_Tax_ID__c = value_tSalesforceInput_1;

						} else {
							row1.Broker_Tax_ID__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("X2014_Revenues__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.X2014_Revenues__c = ParserUtils
									.parseTo_Double(value_tSalesforceInput_1);

						} else {
							row1.X2014_Revenues__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sales_Territory__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sales_Territory__c = value_tSalesforceInput_1;

						} else {
							row1.Sales_Territory__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AVA_SFCORE__Billing_Last_Validated__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AVA_SFCORE__Billing_Last_Validated__c = value_tSalesforceInput_1;

						} else {
							row1.AVA_SFCORE__Billing_Last_Validated__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AVA_SFCORE__ExemptEntityType__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AVA_SFCORE__ExemptEntityType__c = value_tSalesforceInput_1;

						} else {
							row1.AVA_SFCORE__ExemptEntityType__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("AVA_SFCORE__Shipping_Last_Validated__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.AVA_SFCORE__Shipping_Last_Validated__c = value_tSalesforceInput_1;

						} else {
							row1.AVA_SFCORE__Shipping_Last_Validated__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Tier__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Tier__c = value_tSalesforceInput_1;

						} else {
							row1.Tier__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Field_App_Scientist__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Field_App_Scientist__c = value_tSalesforceInput_1;

						} else {
							row1.Field_App_Scientist__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Immunoseq_competitor__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Immunoseq_competitor__c = value_tSalesforceInput_1;

						} else {
							row1.Immunoseq_competitor__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Broker_ID__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Broker_ID__c = value_tSalesforceInput_1;

						} else {
							row1.Broker_ID__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("External_Account_ID_Number__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.External_Account_ID_Number__c = value_tSalesforceInput_1;

						} else {
							row1.External_Account_ID_Number__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("VAT__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.VAT__c = value_tSalesforceInput_1;

						} else {
							row1.VAT__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Region__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Region__c = value_tSalesforceInput_1;

						} else {
							row1.Region__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Priority__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Priority__c = value_tSalesforceInput_1;

						} else {
							row1.Priority__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ship_To_Contact__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ship_To_Contact__c = value_tSalesforceInput_1;

						} else {
							row1.Ship_To_Contact__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_Street__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_Street__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_Street__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_City__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_City__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_City__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_State__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_State__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_State__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_Country__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_Country__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_Country__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Sold_To_Zip__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Sold_To_Zip__c = value_tSalesforceInput_1;

						} else {
							row1.Sold_To_Zip__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Market_Segment__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Market_Segment__c = value_tSalesforceInput_1;

						} else {
							row1.Market_Segment__c = null;
						}

						// get the real value according the columnName
						valueObj_tSalesforceInput_1 = topRecord_tSalesforceInput_1
								.getValue("Ship_to_Contact_Phone__c");
						if (valueObj_tSalesforceInput_1 != null) {
							String value_tSalesforceInput_1 = (String) valueObj_tSalesforceInput_1;

							row1.Ship_to_Contact_Phone__c = value_tSalesforceInput_1;

						} else {
							row1.Ship_to_Contact_Phone__c = null;
						}

						/**
						 * [tSalesforceInput_1 begin ] stop
						 */

						/**
						 * [tSalesforceInput_1 main ] start
						 */

						currentComponent = "tSalesforceInput_1";

						tos_count_tSalesforceInput_1++;

						/**
						 * [tSalesforceInput_1 main ] stop
						 */

						/**
						 * [tPostgresqlOutput_1 main ] start
						 */

						currentComponent = "tPostgresqlOutput_1";

						// row1
						// row1

						if (execStat) {
							runStat.updateStatOnConnection("row1" + iterateId,
									1, 1);
						}

						whetherReject_tPostgresqlOutput_1 = false;
						if (row1.Id == null) {
							pstmt_tPostgresqlOutput_1.setNull(1,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(1, row1.Id);
						}

						if (row1.IsDeleted == null) {
							pstmt_tPostgresqlOutput_1.setNull(2,
									java.sql.Types.BOOLEAN);
						} else {
							pstmt_tPostgresqlOutput_1.setBoolean(2,
									row1.IsDeleted);
						}

						if (row1.MasterRecordId == null) {
							pstmt_tPostgresqlOutput_1.setNull(3,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(3,
									row1.MasterRecordId);
						}

						if (row1.Name == null) {
							pstmt_tPostgresqlOutput_1.setNull(4,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(4, row1.Name);
						}

						if (row1.Type == null) {
							pstmt_tPostgresqlOutput_1.setNull(5,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(5, row1.Type);
						}

						if (row1.ParentId == null) {
							pstmt_tPostgresqlOutput_1.setNull(6,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(6,
									row1.ParentId);
						}

						if (row1.BillingStreet == null) {
							pstmt_tPostgresqlOutput_1.setNull(7,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(7,
									row1.BillingStreet);
						}

						if (row1.BillingCity == null) {
							pstmt_tPostgresqlOutput_1.setNull(8,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(8,
									row1.BillingCity);
						}

						if (row1.BillingState == null) {
							pstmt_tPostgresqlOutput_1.setNull(9,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(9,
									row1.BillingState);
						}

						if (row1.BillingPostalCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(10,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(10,
									row1.BillingPostalCode);
						}

						if (row1.BillingCountry == null) {
							pstmt_tPostgresqlOutput_1.setNull(11,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(11,
									row1.BillingCountry);
						}

						if (row1.BillingStateCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(12,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(12,
									row1.BillingStateCode);
						}

						if (row1.BillingCountryCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(13,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(13,
									row1.BillingCountryCode);
						}

						if (row1.BillingLatitude == null) {
							pstmt_tPostgresqlOutput_1.setNull(14,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(14,
									row1.BillingLatitude);
						}

						if (row1.BillingLongitude == null) {
							pstmt_tPostgresqlOutput_1.setNull(15,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(15,
									row1.BillingLongitude);
						}

						if (row1.BillingAddress == null) {
							pstmt_tPostgresqlOutput_1.setNull(16,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(16,
									row1.BillingAddress);
						}

						if (row1.ShippingStreet == null) {
							pstmt_tPostgresqlOutput_1.setNull(17,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(17,
									row1.ShippingStreet);
						}

						if (row1.ShippingCity == null) {
							pstmt_tPostgresqlOutput_1.setNull(18,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(18,
									row1.ShippingCity);
						}

						if (row1.ShippingState == null) {
							pstmt_tPostgresqlOutput_1.setNull(19,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(19,
									row1.ShippingState);
						}

						if (row1.ShippingPostalCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(20,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(20,
									row1.ShippingPostalCode);
						}

						if (row1.ShippingCountry == null) {
							pstmt_tPostgresqlOutput_1.setNull(21,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(21,
									row1.ShippingCountry);
						}

						if (row1.ShippingStateCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(22,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(22,
									row1.ShippingStateCode);
						}

						if (row1.ShippingCountryCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(23,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(23,
									row1.ShippingCountryCode);
						}

						if (row1.ShippingLatitude == null) {
							pstmt_tPostgresqlOutput_1.setNull(24,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(24,
									row1.ShippingLatitude);
						}

						if (row1.ShippingLongitude == null) {
							pstmt_tPostgresqlOutput_1.setNull(25,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(25,
									row1.ShippingLongitude);
						}

						if (row1.ShippingAddress == null) {
							pstmt_tPostgresqlOutput_1.setNull(26,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(26,
									row1.ShippingAddress);
						}

						if (row1.Phone == null) {
							pstmt_tPostgresqlOutput_1.setNull(27,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(27, row1.Phone);
						}

						if (row1.Fax == null) {
							pstmt_tPostgresqlOutput_1.setNull(28,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(28, row1.Fax);
						}

						if (row1.AccountNumber == null) {
							pstmt_tPostgresqlOutput_1.setNull(29,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(29,
									row1.AccountNumber);
						}

						if (row1.Website == null) {
							pstmt_tPostgresqlOutput_1.setNull(30,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(30,
									row1.Website);
						}

						if (row1.PhotoUrl == null) {
							pstmt_tPostgresqlOutput_1.setNull(31,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(31,
									row1.PhotoUrl);
						}

						if (row1.Sic == null) {
							pstmt_tPostgresqlOutput_1.setNull(32,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(32, row1.Sic);
						}

						if (row1.Industry == null) {
							pstmt_tPostgresqlOutput_1.setNull(33,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(33,
									row1.Industry);
						}

						if (row1.AnnualRevenue == null) {
							pstmt_tPostgresqlOutput_1.setNull(34,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(34,
									row1.AnnualRevenue);
						}

						if (row1.NumberOfEmployees == null) {
							pstmt_tPostgresqlOutput_1.setNull(35,
									java.sql.Types.INTEGER);
						} else {
							pstmt_tPostgresqlOutput_1.setInt(35,
									row1.NumberOfEmployees);
						}

						if (row1.Ownership == null) {
							pstmt_tPostgresqlOutput_1.setNull(36,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(36,
									row1.Ownership);
						}

						if (row1.TickerSymbol == null) {
							pstmt_tPostgresqlOutput_1.setNull(37,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(37,
									row1.TickerSymbol);
						}

						if (row1.Description == null) {
							pstmt_tPostgresqlOutput_1.setNull(38,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(38,
									row1.Description);
						}

						if (row1.Rating == null) {
							pstmt_tPostgresqlOutput_1.setNull(39,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1
									.setString(39, row1.Rating);
						}

						if (row1.Site == null) {
							pstmt_tPostgresqlOutput_1.setNull(40,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(40, row1.Site);
						}

						if (row1.CurrencyIsoCode == null) {
							pstmt_tPostgresqlOutput_1.setNull(41,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(41,
									row1.CurrencyIsoCode);
						}

						if (row1.OwnerId == null) {
							pstmt_tPostgresqlOutput_1.setNull(42,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(42,
									row1.OwnerId);
						}

						if (row1.CreatedDate != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(
									43,
									new java.sql.Timestamp(row1.CreatedDate
											.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(43,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.CreatedById == null) {
							pstmt_tPostgresqlOutput_1.setNull(44,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(44,
									row1.CreatedById);
						}

						if (row1.LastModifiedDate != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(45,
									new java.sql.Timestamp(
											row1.LastModifiedDate.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(45,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.LastModifiedById == null) {
							pstmt_tPostgresqlOutput_1.setNull(46,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(46,
									row1.LastModifiedById);
						}

						if (row1.SystemModstamp != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(
									47,
									new java.sql.Timestamp(row1.SystemModstamp
											.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(47,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.LastActivityDate != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(48,
									new java.sql.Timestamp(
											row1.LastActivityDate.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(48,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.LastViewedDate != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(
									49,
									new java.sql.Timestamp(row1.LastViewedDate
											.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(49,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.LastReferencedDate != null) {
							pstmt_tPostgresqlOutput_1.setTimestamp(50,
									new java.sql.Timestamp(
											row1.LastReferencedDate.getTime()));
						} else {
							pstmt_tPostgresqlOutput_1.setNull(50,
									java.sql.Types.TIMESTAMP);
						}

						if (row1.Jigsaw == null) {
							pstmt_tPostgresqlOutput_1.setNull(51,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1
									.setString(51, row1.Jigsaw);
						}

						if (row1.JigsawCompanyId == null) {
							pstmt_tPostgresqlOutput_1.setNull(52,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(52,
									row1.JigsawCompanyId);
						}

						if (row1.AccountSource == null) {
							pstmt_tPostgresqlOutput_1.setNull(53,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(53,
									row1.AccountSource);
						}

						if (row1.SicDesc == null) {
							pstmt_tPostgresqlOutput_1.setNull(54,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(54,
									row1.SicDesc);
						}

						if (row1.Sold_To_Name__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(55,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(55,
									row1.Sold_To_Name__c);
						}

						if (row1.Contact_Type__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(56,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(56,
									row1.Contact_Type__c);
						}

						if (row1.Affiliation__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(57,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(57,
									row1.Affiliation__c);
						}

						if (row1.FN__Find_Nearby__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(58,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(58,
									row1.FN__Find_Nearby__c);
						}

						if (row1.FN__Lat__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(59,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(59,
									row1.FN__Lat__c);
						}

						if (row1.FN__Lon__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(60,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(60,
									row1.FN__Lon__c);
						}

						if (row1.FN__Mapping_Status__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(61,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(61,
									row1.FN__Mapping_Status__c);
						}

						if (row1.FN__Which_Address__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(62,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(62,
									row1.FN__Which_Address__c);
						}

						if (row1.Total_Opportunities__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(63,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(63,
									row1.Total_Opportunities__c);
						}

						if (row1.Total_Amount_Open__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(64,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(64,
									row1.Total_Amount_Open__c);
						}

						if (row1.Total_Amount_Won__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(65,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(65,
									row1.Total_Amount_Won__c);
						}

						if (row1.Map_This_Account__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(66,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(66,
									row1.Map_This_Account__c);
						}

						if (row1.Account_Number__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(67,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(67,
									row1.Account_Number__c);
						}

						if (row1.Other_Account_Type__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(68,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(68,
									row1.Other_Account_Type__c);
						}

						if (row1.Affiliations__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(69,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(69,
									row1.Affiliations__c);
						}

						if (row1.Bill_To_Phone__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(70,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(70,
									row1.Bill_To_Phone__c);
						}

						if (row1.Bill_To_Contact__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(71,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(71,
									row1.Bill_To_Contact__c);
						}

						if (row1.Clinical_Sales_Territory__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(72,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(72,
									row1.Clinical_Sales_Territory__c);
						}

						if (row1.Ship_Attn_To__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(73,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(73,
									row1.Ship_Attn_To__c);
						}

						if (row1.Tax_Exempt__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(74,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(74,
									row1.Tax_Exempt__c);
						}

						if (row1.Tech_Access_Fee_Rate__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(75,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(75,
									row1.Tech_Access_Fee_Rate__c);
						}

						if (row1.Workspace_ID__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(76,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(76,
									row1.Workspace_ID__c);
						}

						if (row1.Bill_To_Name__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(77,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(77,
									row1.Bill_To_Name__c);
						}

						if (row1.Ship_To_Name__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(78,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(78,
									row1.Ship_To_Name__c);
						}

						if (row1.Currency_Code__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(79,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(79,
									row1.Currency_Code__c);
						}

						if (row1.Account_Types__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(80,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(80,
									row1.Account_Types__c);
						}

						if (row1.Group_Code__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(81,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(81,
									row1.Group_Code__c);
						}

						if (row1.Workspace_Name__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(82,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(82,
									row1.Workspace_Name__c);
						}

						if (row1.Secure_Fax__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(83,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(83,
									row1.Secure_Fax__c);
						}

						if (row1.Secure_Email__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(84,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(84,
									row1.Secure_Email__c);
						}

						if (row1.Bill_To_Email__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(85,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(85,
									row1.Bill_To_Email__c);
						}

						if (row1.Ship_To_Email__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(86,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(86,
									row1.Ship_To_Email__c);
						}

						if (row1.Broker_Tax_ID__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(87,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(87,
									row1.Broker_Tax_ID__c);
						}

						if (row1.X2014_Revenues__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(88,
									java.sql.Types.DOUBLE);
						} else {
							pstmt_tPostgresqlOutput_1.setDouble(88,
									row1.X2014_Revenues__c);
						}

						if (row1.Sales_Territory__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(89,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(89,
									row1.Sales_Territory__c);
						}

						if (row1.AVA_SFCORE__Billing_Last_Validated__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(90,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(90,
									row1.AVA_SFCORE__Billing_Last_Validated__c);
						}

						if (row1.AVA_SFCORE__ExemptEntityType__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(91,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(91,
									row1.AVA_SFCORE__ExemptEntityType__c);
						}

						if (row1.AVA_SFCORE__Shipping_Last_Validated__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(92,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1
									.setString(
											92,
											row1.AVA_SFCORE__Shipping_Last_Validated__c);
						}

						if (row1.Tier__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(93,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(93,
									row1.Tier__c);
						}

						if (row1.Field_App_Scientist__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(94,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(94,
									row1.Field_App_Scientist__c);
						}

						if (row1.Immunoseq_competitor__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(95,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(95,
									row1.Immunoseq_competitor__c);
						}

						if (row1.Broker_ID__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(96,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(96,
									row1.Broker_ID__c);
						}

						if (row1.External_Account_ID_Number__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(97,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(97,
									row1.External_Account_ID_Number__c);
						}

						if (row1.VAT__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(98,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1
									.setString(98, row1.VAT__c);
						}

						if (row1.Region__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(99,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(99,
									row1.Region__c);
						}

						if (row1.Priority__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(100,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(100,
									row1.Priority__c);
						}

						if (row1.Ship_To_Contact__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(101,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(101,
									row1.Ship_To_Contact__c);
						}

						if (row1.Sold_To_Street__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(102,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(102,
									row1.Sold_To_Street__c);
						}

						if (row1.Sold_To_City__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(103,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(103,
									row1.Sold_To_City__c);
						}

						if (row1.Sold_To_State__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(104,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(104,
									row1.Sold_To_State__c);
						}

						if (row1.Sold_To_Country__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(105,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(105,
									row1.Sold_To_Country__c);
						}

						if (row1.Sold_To_Zip__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(106,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(106,
									row1.Sold_To_Zip__c);
						}

						if (row1.Market_Segment__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(107,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(107,
									row1.Market_Segment__c);
						}

						if (row1.Ship_to_Contact_Phone__c == null) {
							pstmt_tPostgresqlOutput_1.setNull(108,
									java.sql.Types.VARCHAR);
						} else {
							pstmt_tPostgresqlOutput_1.setString(108,
									row1.Ship_to_Contact_Phone__c);
						}

						try {
							nb_line_tPostgresqlOutput_1++;

							insertedCount_tPostgresqlOutput_1 = insertedCount_tPostgresqlOutput_1
									+ pstmt_tPostgresqlOutput_1.executeUpdate();

						} catch (java.lang.Exception e) {

							whetherReject_tPostgresqlOutput_1 = true;
							throw (e);
						}
						commitCounter_tPostgresqlOutput_1++;
						if (commitEvery_tPostgresqlOutput_1 <= commitCounter_tPostgresqlOutput_1) {
							conn_tPostgresqlOutput_1.commit();

							commitCounter_tPostgresqlOutput_1 = 0;
						}

						tos_count_tPostgresqlOutput_1++;

						/**
						 * [tPostgresqlOutput_1 main ] stop
						 */

						/**
						 * [tSalesforceInput_1 end ] start
						 */

						currentComponent = "tSalesforceInput_1";

						// (for salesforce wizard preview)
						if (limit_tSalesforceInput_1 > 0
								&& nb_line_tSalesforceInput_1 >= limit_tSalesforceInput_1) {
							bContinue_tSalesforceInput_1 = false;
							break;
						}

					}
					// handle the loop + 1 problem by checking the most recent
					// queryResult
					if (qr_tSalesforceInput_1.getDone()) {
						bContinue_tSalesforceInput_1 = false;
					} else {
						qr_tSalesforceInput_1 = sfMgr_tSalesforceInput_1
								.queryMore(
										qr_tSalesforceInput_1.getQueryLocator(),
										new Integer(250));
						topqr_tSalesforceInput_1 = new org.talend.salesforce.TopQueryResult();
						topqr_tSalesforceInput_1
								.processTopQueryResult(qr_tSalesforceInput_1);
					}
				}

				sfMgr_tSalesforceInput_1.logout();

				globalMap.put("tSalesforceInput_1_NB_LINE",
						nb_line_tSalesforceInput_1);

				ok_Hash.put("tSalesforceInput_1", true);
				end_Hash.put("tSalesforceInput_1", System.currentTimeMillis());

				/**
				 * [tSalesforceInput_1 end ] stop
				 */

				/**
				 * [tPostgresqlOutput_1 end ] start
				 */

				currentComponent = "tPostgresqlOutput_1";

				if (pstmt_tPostgresqlOutput_1 != null) {
					pstmt_tPostgresqlOutput_1.close();
				}

				conn_tPostgresqlOutput_1.commit();

				conn_tPostgresqlOutput_1.close();

				resourceMap.put("finish_tPostgresqlOutput_1", true);

				nb_line_deleted_tPostgresqlOutput_1 = nb_line_deleted_tPostgresqlOutput_1
						+ deletedCount_tPostgresqlOutput_1;
				nb_line_update_tPostgresqlOutput_1 = nb_line_update_tPostgresqlOutput_1
						+ updatedCount_tPostgresqlOutput_1;
				nb_line_inserted_tPostgresqlOutput_1 = nb_line_inserted_tPostgresqlOutput_1
						+ insertedCount_tPostgresqlOutput_1;
				nb_line_rejected_tPostgresqlOutput_1 = nb_line_rejected_tPostgresqlOutput_1
						+ rejectedCount_tPostgresqlOutput_1;

				globalMap.put("tPostgresqlOutput_1_NB_LINE",
						nb_line_tPostgresqlOutput_1);
				globalMap.put("tPostgresqlOutput_1_NB_LINE_UPDATED",
						nb_line_update_tPostgresqlOutput_1);
				globalMap.put("tPostgresqlOutput_1_NB_LINE_INSERTED",
						nb_line_inserted_tPostgresqlOutput_1);
				globalMap.put("tPostgresqlOutput_1_NB_LINE_DELETED",
						nb_line_deleted_tPostgresqlOutput_1);
				globalMap.put("tPostgresqlOutput_1_NB_LINE_REJECTED",
						nb_line_rejected_tPostgresqlOutput_1);

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null
							|| !((Boolean) resourceMap.get("inIterateVComp"))) {
						runStat.updateStatOnConnection("row1" + iterateId, 2, 0);
					}
				}

				ok_Hash.put("tPostgresqlOutput_1", true);
				end_Hash.put("tPostgresqlOutput_1", System.currentTimeMillis());

				/**
				 * [tPostgresqlOutput_1 end ] stop
				 */

			}// end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent,
					globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tSalesforceInput_1 finally ] start
				 */

				currentComponent = "tSalesforceInput_1";

				/**
				 * [tSalesforceInput_1 finally ] stop
				 */

				/**
				 * [tPostgresqlOutput_1 finally ] start
				 */

				currentComponent = "tPostgresqlOutput_1";

				if (resourceMap.get("finish_tPostgresqlOutput_1") == null) {
					if (resourceMap.get("conn_tPostgresqlOutput_1") != null) {
						try {

							((java.sql.Connection) resourceMap
									.get("conn_tPostgresqlOutput_1")).close();

						} catch (java.sql.SQLException sqlEx_tPostgresqlOutput_1) {
							String errorMessage_tPostgresqlOutput_1 = "failed to close the connection in tPostgresqlOutput_1 :"
									+ sqlEx_tPostgresqlOutput_1.getMessage();

							System.err
									.println(errorMessage_tPostgresqlOutput_1);
						}
					}
				}

				/**
				 * [tPostgresqlOutput_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	private SyncInt runningThreadCount = new SyncInt();

	private class SyncInt {
		private int count = 0;

		public synchronized void add(int i) {
			count += i;
		}

		public synchronized int getCount() {
			return count;
		}
	}

	private java.util.Properties context_param = new java.util.Properties();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final Step01_Stage_salesforce_data Step01_Stage_salesforce_dataClass = new Step01_Stage_salesforce_data();

		int exitCode = Step01_Stage_salesforce_dataClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket
				// can't open
				System.err.println("The statistics socket port " + portStats
						+ " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}

		try {
			// call job/subjob with an existing context, like:
			// --context=production. if without this parameter, there will use
			// the default context instead.
			java.io.InputStream inContext = Step01_Stage_salesforce_data.class
					.getClassLoader().getResourceAsStream(
							"local_project/step01_stage_salesforce_data_0_1/contexts/"
									+ contextStr + ".properties");
			if (isDefaultContext && inContext == null) {

			} else {
				if (inContext != null) {
					// defaultProps is in order to keep the original context
					// value
					defaultProps.load(inContext);
					inContext.close();
					context = new ContextProperties(defaultProps);
				} else {
					// print info and job continue to run, for case:
					// context_param is not empty.
					System.err.println("Could not find the context "
							+ contextStr);
				}
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
			}
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil
				.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName,
				jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName,
				parent_part_launcher, Thread.currentThread().getId() + "", "",
				"", "", "",
				resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory()
				- Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		runningThreadCount.add(1);
		new Thread() {
			public void run() {
				java.util.Map threadRunResultMap = new java.util.HashMap();
				threadRunResultMap.put("errorCode", null);
				threadRunResultMap.put("status", "");
				threadLocal.set(threadRunResultMap);

				try {
					((java.util.Map) threadLocal.get()).put("errorCode", null);
					tSalesforceInput_1Process(globalMap);
					if (!"failure".equals(((java.util.Map) threadLocal.get())
							.get("status"))) {
						((java.util.Map) threadLocal.get())
								.put("status", "end");
					}
				} catch (TalendException e_tSalesforceInput_1) {
					globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", -1);

					e_tSalesforceInput_1.printStackTrace();

				} catch (Error e_tSalesforceInput_1) {
					globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", -1);

					e_tSalesforceInput_1.printStackTrace();

				} finally {
					Integer localErrorCode = (Integer) (((java.util.Map) threadLocal
							.get()).get("errorCode"));
					String localStatus = (String) (((java.util.Map) threadLocal
							.get()).get("status"));
					if (localErrorCode != null) {
						if (errorCode == null
								|| localErrorCode.compareTo(errorCode) > 0) {
							errorCode = localErrorCode;
						}
					}
					if (!status.equals("failure")) {
						status = localStatus;
					}

					runningThreadCount.add(-1);
				}
			}
		}.start();

		while (runningThreadCount.getCount() > 0) {
			try {
				Thread.sleep(10);
			} catch (java.lang.Exception e) {
				e.printStackTrace();
			}
		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory()
				- Runtime.getRuntime().freeMemory();
		if (false) {
			System.out
					.println((endUsedMemory - startUsedMemory)
							+ " bytes memory increase when running : Step01_Stage_salesforce_data");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;
		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher,
				Thread.currentThread().getId() + "", "", "" + returnCode, "",
				"", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index),
							keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		}

	}

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" },
			{ "\\'", "\'" }, { "\\r", "\r" }, { "\\f", "\f" }, { "\\b", "\b" },
			{ "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex,
							index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left
			// into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 162089 characters generated by Talend Open Studio for ESB on the March 9,
 * 2016 2:18:12 PM PST
 ************************************************************************************************/
